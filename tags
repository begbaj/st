!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/began/sources/suckless/st/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20210905.0/
$(OBJ)	st/Makefile	/^$(OBJ): config.h config.mk$/;"	t
-0,0 +1,23	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -0,0 +1,23 @@$/;"	h	newFile:b/utils.h
-0,0 +1,23	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -0,0 +1,23 @@$/;"	h	newFile:b/utils.h
-0,0 +1,284	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -0,0 +1,284 @@$/;"	h	newFile:b/normalMode.c
-0,0 +1,284	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -0,0 +1,284 @@$/;"	h	newFile:b/normalMode.c
-0,0 +1,8	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -0,0 +1,8 @@$/;"	h	newFile:b/normalMode.h
-0,0 +1,8	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -0,0 +1,8 @@$/;"	h	newFile:b/normalMode.h
-1,4 +1,5	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1,4 +1,5 @@$/;"	h	modifiedFile:a/st.c
-1,4 +1,5	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -1,4 +1,5 @@$/;"	h	modifiedFile:a/st.c
-1000,8 +1007,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1000,8 +1007,7 @@ tfulldirt(void)$/;"	h	modifiedFile:a/st.c
-1001,8 +1070,7	patches/st-history-20220615-43a395a.diff	/^@@ -1001,8 +1070,7 @@ tfulldirt(void)$/;"	h	modifiedFile:a/st.c
-105,6 +105,7	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -105,6 +105,7 @@ typedef struct {$/;"	h	modifiedFile:a/x.c
-1057,6 +1155,9	patches/st-font2-20190416-ba72400.diff	/^@@ -1057,6 +1155,9 @@ xinit(int cols, int rows)$/;"	h	modifiedFile:a/x.c
-1061,6 +1067,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1061,6 +1067,7 @@ tswapscreen(void)$/;"	h	modifiedFile:a/st.c
-1062,6 +1130,7	patches/st-history-20220615-43a395a.diff	/^@@ -1062,6 +1130,7 @@ tswapscreen(void)$/;"	h	modifiedFile:a/st.c
-1081,6 +1088,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1081,6 +1088,7 @@ tscrolldown(int orig, int n)$/;"	h	modifiedFile:a/st.c
-1082,6 +1151,7	patches/st-history-20220615-43a395a.diff	/^@@ -1082,6 +1151,7 @@ tscrolldown(int orig, int n)$/;"	h	modifiedFile:a/st.c
-1118,11 +1129,23	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -1118,11 +1129,23 @@ xinit(int cols, int rows)$/;"	h	modifiedFile:a/x.c
-1132,7 +1155,7	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -1132,7 +1155,7 @@ xinit(int cols, int rows)$/;"	h	modifiedFile:a/x.c
-1152,19 +1175,15	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -1152,19 +1175,15 @@ xinit(int cols, int rows)$/;"	h	modifiedFile:a/x.c
-122,6 +122,7	patches/st-history-20220615-43a395a.diff	/^@@ -122,6 +122,7 @@ unsigned int defaultfg = 7;$/;"	h	modifiedFile:a/config.def.h
-122,7 +122,21	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -122,7 +122,21 @@ unsigned int defaultfg = 7;$/;"	h	modifiedFile:a/config.def.h
-1225,8 +1244,10	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1225,8 +1244,10 @@ xmakeglyphfontspecs(XftGlyphFontSpec *specs, const Glyph *glyphs, int len/;"	h	modifiedFile:a/x.c
-1225,8 +1244,10	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -1225,8 +1244,10 @@ xmakeglyphfontspecs(XftGlyphFontSpec *specs, const Glyph *glyphs, int len/;"	h	modifiedFile:a/x.c
-1232,8 +1240,8	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1232,8 +1240,8 @@ tclearregion(int x1, int y1, int x2, int y2)$/;"	h	modifiedFile:a/st.c
-127,14 +129,22	patches/st-dracula-0.8.5.diff	/^@@ -127,14 +129,22 @@ static const char *colorname[] = {$/;"	h	modifiedFile:../st/config.def.h
-131,6 +131,21	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -131,6 +131,21 @@ unsigned int defaultfg = 7;$/;"	h	modifiedFile:a/config.def.h
-1313,8 +1314,8	patches/st-columns-20220615-historyVanilla.diff	/^@@ -1313,8 +1314,8 @@ tclearregion(int x1, int y1, int x2, int y2)$/;"	h	modifiedFile:a/st.c
-149,6 +149,8	patches/st-font2-20190416-ba72400.diff	/^@@ -149,6 +149,8 @@ static void xhints(void);$/;"	h	modifiedFile:a/x.c
-1608,6 +1629,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -1608,6 +1629,7 @@ xdrawline(Line line, int x1, int y1, int x2)$/;"	h	modifiedFile:a/x.c
-1609,6 +1630,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1609,6 +1630,7 @@ xdrawline(Line line, int x1, int y1, int x2)$/;"	h	modifiedFile:a/x.c
-178,7 +182,6	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -178,7 +182,6 @@ static void tdeleteline(int);$/;"	h	modifiedFile:a/st.c
-1800,6 +1822,11	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -1800,6 +1822,11 @@ kpress(XEvent *ev)$/;"	h	modifiedFile:a/x.c
-1800,6 +1822,11	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -1800,6 +1822,11 @@ kpress(XEvent *ev)$/;"	h	modifiedFile:a/x.c
-181,7 +183,6	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -181,7 +183,6 @@ static void tdeleteline(int);$/;"	h	modifiedFile:a/st.c
-189,6 +189,9	patches/st-scrollback-20220615-historyVanilla.diff	/^@@ -189,6 +189,9 @@ static Shortcut shortcuts[] = {$/;"	h	modifiedFile:a/config.def.h
-189,6 +203,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -189,6 +203,7 @@ static Shortcut shortcuts[] = {$/;"	h	modifiedFile:a/config.def.h
-19,6 +19,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -19,6 +19,7 @@ char *argv0;$/;"	h	modifiedFile:a/x.c
-19,6 +19,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -19,6 +19,7 @@ enum win_mode {$/;"	h	modifiedFile:a/win.h
-19,6 +19,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -19,6 +19,7 @@ char *argv0;$/;"	h	modifiedFile:a/x.c
-19,6 +19,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -19,6 +19,7 @@ enum win_mode {$/;"	h	modifiedFile:a/win.h
-199,6 +214,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -199,6 +214,7 @@ static Shortcut shortcuts[] = {$/;"	h	modifiedFile:a/config.def.h
-2019,6 +2038,10	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -2019,6 +2038,10 @@ main(int argc, char *argv[])$/;"	h	modifiedFile:a/x.c
-205,7 +208,6	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -205,7 +208,6 @@ static void drawregion(int, int, int, int);$/;"	h	modifiedFile:a/st.c
-208,7 +209,6	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -208,7 +209,6 @@ static void drawregion(int, int, int, int);$/;"	h	modifiedFile:a/st.c
-21,7 +21,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -21,7 +21,7 @@ config.h:$/;"	h	modifiedFile:a/Makefile
-21,7 +21,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -21,7 +21,7 @@ config.h:$/;"	h	modifiedFile:a/Makefile
-231,6 +233,14	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -231,6 +233,14 @@ static uchar utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	h	modifiedFile:a/st.c
-232,6 +234,13	patches/st-history-20220615-43a395a.diff	/^@@ -232,6 +234,13 @@ static uchar utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	h	modifiedFile:a/st.c
-234,6 +234,7	patches/st-columns-20220615-historyVanilla.diff	/^@@ -234,6 +234,7 @@ static uchar utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	h	modifiedFile:a/st.c
-235,7 +235,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -235,7 +235,7 @@ static Rune utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	h	modifiedFile:a/st.c
-2394,8 +2402,6	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -2394,8 +2402,6 @@ check_control_code:$/;"	h	modifiedFile:a/st.c
-2465,8 +2471,10	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -2465,8 +2471,10 @@ void$/;"	h	modifiedFile:a/st.c
-2475,6 +2483,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -2475,6 +2483,7 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2482,48 +2491,54	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -2482,48 +2491,54 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2483,8 +2420,6	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -2483,8 +2420,6 @@ check_control_code:$/;"	h	modifiedFile:a/st.c
-2483,8 +2553,10	patches/st-history-20220615-43a395a.diff	/^@@ -2483,8 +2553,10 @@ void$/;"	h	modifiedFile:a/st.c
-2493,6 +2565,7	patches/st-history-20220615-43a395a.diff	/^@@ -2493,6 +2565,7 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2500,34 +2573,29	patches/st-history-20220615-43a395a.diff	/^@@ -2500,34 +2573,29 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2539,9 +2607,17	patches/st-history-20220615-43a395a.diff	/^@@ -2539,9 +2607,17 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2552,15 +2567,17	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -2552,15 +2567,17 @@ resettitle(void)$/;"	h	modifiedFile:a/st.c
-2553,10 +2554,10	patches/st-columns-20220615-historyVanilla.diff	/^@@ -2553,10 +2554,10 @@ void$/;"	h	modifiedFile:a/st.c
-2570,15 +2646,17	patches/st-history-20220615-43a395a.diff	/^@@ -2570,15 +2646,17 @@ resettitle(void)$/;"	h	modifiedFile:a/st.c
-2579,7 +2596,9	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -2579,7 +2596,9 @@ draw(void)$/;"	h	modifiedFile:a/st.c
-2587,6 +2522,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -2587,6 +2522,7 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2598,10 +2599,10	patches/st-columns-20220615-historyVanilla.diff	/^@@ -2598,10 +2599,10 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2598,6 +2676,7	patches/st-history-20220615-43a395a.diff	/^@@ -2598,6 +2676,7 @@ draw(void)$/;"	h	modifiedFile:a/st.c
-261,6 +262,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -261,6 +262,7 @@ clipcopy(const Arg *dummy)$/;"	h	modifiedFile:a/x.c
-261,6 +262,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -261,6 +262,7 @@ clipcopy(const Arg *dummy)$/;"	h	modifiedFile:a/x.c
-2610,12 +2611,13	patches/st-columns-20220615-historyVanilla.diff	/^@@ -2610,12 +2611,13 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2614,6 +2550,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -2614,6 +2550,7 @@ tresize(int col, int row)$/;"	h	modifiedFile:a/st.c
-2675,6 +2612,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -2675,6 +2612,7 @@ draw(void)$/;"	h	modifiedFile:a/st.c
-2692,3 +2692,11	patches/st-scrollback-20220615-historyVanilla.diff	/^@@ -2692,3 +2692,11 @@ redraw(void)$/;"	h	modifiedFile:a/st.c
-296,6 +298,7	patches/st-font2-20190416-ba72400.diff	/^@@ -296,6 +298,7 @@ zoomabs(const Arg *arg)$/;"	h	modifiedFile:a/x.c
-42,6 +42,8	patches/st-history-20220615-43a395a.diff	/^@@ -42,6 +42,8 @@$/;"	h	modifiedFile:a/st.c
-42,6 +43,8	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -42,6 +43,8 @@$/;"	h	modifiedFile:a/st.c
-423,6 +433,118	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -423,6 +433,118 @@ tlinelen(int y)$/;"	h	modifiedFile:a/st.c
-424,6 +433,60	patches/st-history-20220615-43a395a.diff	/^@@ -424,6 +433,60 @@ tlinelen(int y)$/;"	h	modifiedFile:a/st.c
-432,19 +554,14	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -432,19 +554,14 @@ selstart(int col, int row, int snap)$/;"	h	modifiedFile:a/st.c
-447,7 +447,10	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -447,7 +447,10 @@ void historyOpToggle(int start, int paint) {$/;"	h	modifiedFile:a/st.c
-452,51 +569,13	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -452,51 +569,13 @@ selextend(int col, int row, int type, int done)$/;"	h	modifiedFile:a/st.c
-460,7 +462,6	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -460,7 +462,6 @@ void$/;"	h	modifiedFile:a/x.c
-460,7 +462,6	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -460,7 +462,6 @@ void$/;"	h	modifiedFile:a/x.c
-463,6 +466,19	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -463,6 +466,19 @@ int historyBufferScroll(int n) {$/;"	h	modifiedFile:a/st.c
-464,7 +465,7	patches/st-columns-20220615-historyVanilla.diff	/^@@ -464,7 +465,7 @@ int historyBufferScroll(int n) {$/;"	h	modifiedFile:a/st.c
-464,8 +527,10	patches/st-history-20220615-43a395a.diff	/^@@ -464,8 +527,10 @@ selextend(int col, int row, int type, int done)$/;"	h	modifiedFile:a/st.c
-476,17 +477,34	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -476,17 +477,34 @@ bpress(XEvent *e)$/;"	h	modifiedFile:a/x.c
-476,17 +477,34	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -476,17 +477,34 @@ bpress(XEvent *e)$/;"	h	modifiedFile:a/x.c
-487,6 +503,48	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -487,6 +503,48 @@ int historyMove(int x, int y, int ly) {$/;"	h	modifiedFile:a/st.c
-496,19 +554,14	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -496,19 +554,14 @@ selstart(int col, int row, int snap)$/;"	h	modifiedFile:a/st.c
-508,119 +587,47	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -508,119 +587,47 @@ selected(int x, int y)$/;"	h	modifiedFile:a/st.c
-516,53 +569,13	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -516,53 +569,13 @@ selextend(int col, int row, int type, int done)$/;"	h	modifiedFile:a/st.c
-574,120 +587,47	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -574,120 +587,47 @@ selected(int x, int y)$/;"	h	modifiedFile:a/st.c
-597,6 +662,7	patches/st-history-20220615-43a395a.diff	/^@@ -597,6 +662,7 @@ getsel(void)$/;"	h	modifiedFile:a/st.c
-6,6 +6,12	patches/st-font2-20190416-ba72400.diff	/^@@ -6,6 +6,12 @@$/;"	h	modifiedFile:a/config.def.h
-633,7 +640,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -633,7 +640,7 @@ getsel(void)$/;"	h	modifiedFile:a/st.c
-638,6 +704,7	patches/st-history-20220615-43a395a.diff	/^@@ -638,6 +704,7 @@ getsel(void)$/;"	h	modifiedFile:a/st.c
-648,7 +655,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -648,7 +655,7 @@ selclear(void)$/;"	h	modifiedFile:a/st.c
-648,7 +715,9	patches/st-history-20220615-43a395a.diff	/^@@ -648,7 +715,9 @@ selclear(void)$/;"	h	modifiedFile:a/st.c
-691,8 +709,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -691,8 +709,7 @@ brelease(XEvent *e)$/;"	h	modifiedFile:a/x.c
-691,8 +709,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -691,8 +709,7 @@ brelease(XEvent *e)$/;"	h	modifiedFile:a/x.c
-700,11 +640,10	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -700,11 +640,10 @@ getsel(void)$/;"	h	modifiedFile:a/st.c
-715,9 +654,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -715,9 +654,7 @@ selclear(void)$/;"	h	modifiedFile:a/st.c
-736,7 +737,7	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -736,7 +737,7 @@ xresize(int col, int row)$/;"	h	modifiedFile:a/x.c
-772,6 +789,8	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -772,6 +789,8 @@ xloadcolor(int i, const char *name, Color *ncolor)$/;"	h	modifiedFile:a/x.c
-772,6 +789,8	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -772,6 +789,8 @@ xloadcolor(int i, const char *name, Color *ncolor)$/;"	h	modifiedFile:a/x.c
-796,6 +797,10	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -796,6 +797,10 @@ xloadcols(void)$/;"	h	modifiedFile:a/x.c
-8,6 +8,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -8,6 +8,7 @@$/;"	h	modifiedFile:a/st.h
-8,6 +8,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -8,6 +8,7 @@$/;"	h	modifiedFile:a/st.h
-81,6 +81,9	patches/st-scrollback-20220615-historyVanilla.diff	/^@@ -81,6 +81,9 @@ void die(const char *, ...);$/;"	h	modifiedFile:a/st.h
-826,6 +831,12	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -826,6 +831,12 @@ xsetcolorname(int x, const char *name)$/;"	h	modifiedFile:a/x.c
-89,6 +90,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -89,6 +90,7 @@ void toggleprinter(const Arg *);$/;"	h	modifiedFile:a/st.h
-89,6 +90,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -89,6 +90,7 @@ void toggleprinter(const Arg *);$/;"	h	modifiedFile:a/st.h
-93,6 +93,9	patches/st-alpha-osc11-20220222-0.8.5.diff	/^@@ -93,6 +93,9 @@ char *termname = "st-256color";$/;"	h	modifiedFile:a/config.def.h
-95,27 +95,29	patches/st-dracula-0.8.5.diff	/^@@ -95,27 +95,29 @@ unsigned int tabspaces = 8;$/;"	h	modifiedFile:../st/config.def.h
-95,6 +98,7	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^@@ -95,6 +98,7 @@ typedef struct {$/;"	h	modifiedFile:a/st.c
-977,6 +980,101	patches/st-font2-20190416-ba72400.diff	/^@@ -977,6 +980,101 @@ xloadfonts(char *fontstr, double fontsize)$/;"	h	modifiedFile:a/x.c
-99,6 +100,7	patches/st-vim-browse-20220615-historyVanilla.diff	/^@@ -99,6 +100,7 @@ typedef struct {$/;"	h	modifiedFile:a/st.c
../st/config.def.h	patches/st-dracula-0.8.5.diff	/^--- ..\/st\/config.def.h	2022-03-09 08:28:40.186246176 -0300$/;"	m
.c.o	st/Makefile	/^.c.o:$/;"	t
ARGBEGIN	st/arg.h	/^#define ARGBEGIN	/;"	d
ARGC	st/arg.h	/^#define ARGC(/;"	d
ARGEND	st/arg.h	/^#define ARGEND	/;"	d
ARGF	st/arg.h	/^#define ARGF(/;"	d
ARG_H__	st/arg.h	/^#define ARG_H__$/;"	d
ATTRCMP	st/st.h	/^#define ATTRCMP(/;"	d
ATTR_BLINK	st/st.h	/^	ATTR_BLINK      = 1 << 4,$/;"	e	enum:glyph_attribute
ATTR_BOLD	st/st.h	/^	ATTR_BOLD       = 1 << 0,$/;"	e	enum:glyph_attribute
ATTR_BOLD_FAINT	st/st.h	/^	ATTR_BOLD_FAINT = ATTR_BOLD | ATTR_FAINT,$/;"	e	enum:glyph_attribute
ATTR_FAINT	st/st.h	/^	ATTR_FAINT      = 1 << 1,$/;"	e	enum:glyph_attribute
ATTR_INVISIBLE	st/st.h	/^	ATTR_INVISIBLE  = 1 << 6,$/;"	e	enum:glyph_attribute
ATTR_ITALIC	st/st.h	/^	ATTR_ITALIC     = 1 << 2,$/;"	e	enum:glyph_attribute
ATTR_NULL	st/st.h	/^	ATTR_NULL       = 0,$/;"	e	enum:glyph_attribute
ATTR_REVERSE	st/st.h	/^	ATTR_REVERSE    = 1 << 5,$/;"	e	enum:glyph_attribute
ATTR_STRUCK	st/st.h	/^	ATTR_STRUCK     = 1 << 7,$/;"	e	enum:glyph_attribute
ATTR_UNDERLINE	st/st.h	/^	ATTR_UNDERLINE  = 1 << 3,$/;"	e	enum:glyph_attribute
ATTR_WDUMMY	st/st.h	/^	ATTR_WDUMMY     = 1 << 10,$/;"	e	enum:glyph_attribute
ATTR_WIDE	st/st.h	/^	ATTR_WIDE       = 1 << 9,$/;"	e	enum:glyph_attribute
ATTR_WRAP	st/st.h	/^	ATTR_WRAP       = 1 << 8,$/;"	e	enum:glyph_attribute
AUTHORS	st/st.1	/^.SH AUTHORS$/;"	s	title:ST
Arg	st/st.h	/^} Arg;$/;"	t	typeref:union:__anonaa52d418020a
BETWEEN	st/st.h	/^#define BETWEEN(/;"	d
BUGS	st/st.1	/^.SH BUGS$/;"	s	title:ST
CSIEscape	st/st.c	/^} CSIEscape;$/;"	t	typeref:struct:__anonaa52d4130508	file:
CS_FIN	st/st.c	/^	CS_FIN$/;"	e	enum:charset	file:
CS_GER	st/st.c	/^	CS_GER,$/;"	e	enum:charset	file:
CS_GRAPHIC0	st/st.c	/^	CS_GRAPHIC0,$/;"	e	enum:charset	file:
CS_GRAPHIC1	st/st.c	/^	CS_GRAPHIC1,$/;"	e	enum:charset	file:
CS_MULTI	st/st.c	/^	CS_MULTI,$/;"	e	enum:charset	file:
CS_UK	st/st.c	/^	CS_UK,$/;"	e	enum:charset	file:
CS_USA	st/st.c	/^	CS_USA,$/;"	e	enum:charset	file:
CURSOR_DEFAULT	st/st.c	/^	CURSOR_DEFAULT  = 0,$/;"	e	enum:cursor_state	file:
CURSOR_LOAD	st/st.c	/^	CURSOR_LOAD$/;"	e	enum:cursor_movement	file:
CURSOR_ORIGIN	st/st.c	/^	CURSOR_ORIGIN   = 2$/;"	e	enum:cursor_state	file:
CURSOR_SAVE	st/st.c	/^	CURSOR_SAVE,$/;"	e	enum:cursor_movement	file:
CURSOR_WRAPNEXT	st/st.c	/^	CURSOR_WRAPNEXT = 1,$/;"	e	enum:cursor_state	file:
CUSTOMIZATION	st/st.1	/^.SH CUSTOMIZATION$/;"	s	title:ST
Color	st/x.c	/^typedef XftColor Color;$/;"	t	typeref:typename:XftColor	file:
DC	st/x.c	/^} DC;$/;"	t	typeref:struct:__anon1c6f2a240908	file:
DEFAULT	st/st.h	/^#define DEFAULT(/;"	d
DESCRIPTION	st/st.1	/^.SH DESCRIPTION$/;"	s	title:ST
DIVCEIL	st/st.h	/^#define DIVCEIL(/;"	d
Draw	st/x.c	/^typedef XftDraw *Draw;$/;"	t	typeref:typename:XftDraw *	file:
DynamicArray	st/utils.h	/^typedef struct { uint8_t const elSize; uint32_t init, alloc; char* content; } DynamicArray;$/;"	t	typeref:struct:__anon7383bd620108
EARGF	st/arg.h	/^#define EARGF(/;"	d
ESC_ALTCHARSET	st/st.c	/^	ESC_ALTCHARSET = 8,$/;"	e	enum:escape_state	file:
ESC_ARG_SIZ	st/st.c	/^#define ESC_ARG_SIZ /;"	d	file:
ESC_BUF_SIZ	st/st.c	/^#define ESC_BUF_SIZ /;"	d	file:
ESC_CSI	st/st.c	/^	ESC_CSI        = 2,$/;"	e	enum:escape_state	file:
ESC_START	st/st.c	/^	ESC_START      = 1,$/;"	e	enum:escape_state	file:
ESC_STR	st/st.c	/^	ESC_STR        = 4,  \/* DCS, OSC, PM, APC *\/$/;"	e	enum:escape_state	file:
ESC_STR_END	st/st.c	/^	ESC_STR_END    = 16, \/* a final string was encountered *\/$/;"	e	enum:escape_state	file:
ESC_TEST	st/st.c	/^	ESC_TEST       = 32, \/* Enter in test mode *\/$/;"	e	enum:escape_state	file:
ESC_UTF8	st/st.c	/^	ESC_UTF8       = 64,$/;"	e	enum:escape_state	file:
ExitState	st/normalMode.h	/^typedef enum {failed=0, success=1, exitMotion=2, exitOp=3, finish=4} ExitState;$/;"	t	typeref:enum:__anon596f7d9f0103
FRC_BOLD	st/x.c	/^	FRC_BOLD,$/;"	e	enum:__anon1c6f2a240a03	file:
FRC_ITALIC	st/x.c	/^	FRC_ITALIC,$/;"	e	enum:__anon1c6f2a240a03	file:
FRC_ITALICBOLD	st/x.c	/^	FRC_ITALICBOLD$/;"	e	enum:__anon1c6f2a240a03	file:
FRC_NORMAL	st/x.c	/^	FRC_NORMAL,$/;"	e	enum:__anon1c6f2a240a03	file:
Font	st/x.c	/^#define Font /;"	d	file:
Font	st/x.c	/^} Font;$/;"	t	typeref:struct:__anon1c6f2a240808	file:
Fontcache	st/x.c	/^} Fontcache;$/;"	t	typeref:struct:__anon1c6f2a240b08	file:
Glyph	st/st.h	/^#define Glyph /;"	d
Glyph	st/st.h	/^} Glyph;$/;"	t	typeref:struct:__anonaa52d4180108
GlyphFontSpec	st/x.c	/^typedef XftGlyphFontSpec GlyphFontSpec;$/;"	t	typeref:typename:XftGlyphFontSpec	file:
INCS	st/config.mk	/^INCS = -I$(X11INC) \\$/;"	m
ISCONTROL	st/st.c	/^#define ISCONTROL(/;"	d	file:
ISCONTROLC0	st/st.c	/^#define ISCONTROLC0(/;"	d	file:
ISCONTROLC1	st/st.c	/^#define ISCONTROLC1(/;"	d	file:
ISDELIM	st/st.c	/^#define ISDELIM(/;"	d	file:
IS_SET	st/st.c	/^#define IS_SET(/;"	d	file:
IS_SET	st/x.c	/^#define IS_SET(/;"	d	file:
IS_TRUECOL	st/st.h	/^#define IS_TRUECOL(/;"	d
Infix	st/normalMode.c	/^typedef enum {infix_none=0, infix_i='i', infix_a='a'} Infix;$/;"	t	typeref:enum:__anon596f7d9a0303	file:
Key	st/x.c	/^} Key;$/;"	t	typeref:struct:__anon1c6f2a240308	file:
LEN	st/st.h	/^#define LEN(/;"	d
LIBS	st/config.mk	/^LIBS = -L$(X11LIB) -lm -lrt -lX11 -lutil -lXft \\$/;"	m
LICENSE	st/st.1	/^.SH LICENSE$/;"	s	title:ST
LIMIT	st/st.h	/^#define LIMIT(/;"	d
Line	st/st.h	/^typedef Glyph *Line;$/;"	t	typeref:typename:Glyph *
MANPREFIX	st/config.mk	/^MANPREFIX = $(PREFIX)\/share\/man$/;"	m
MAX	st/st.h	/^#define MAX(/;"	d
MIN	st/st.h	/^#define MIN(/;"	d
MODBIT	st/st.h	/^#define MODBIT(/;"	d
MODE_8BIT	st/win.h	/^	MODE_8BIT        = 1 << 10,$/;"	e	enum:win_mode
MODE_ALTSCREEN	st/st.c	/^	MODE_ALTSCREEN   = 1 << 2,$/;"	e	enum:term_mode	file:
MODE_APPCURSOR	st/win.h	/^	MODE_APPCURSOR   = 1 << 8,$/;"	e	enum:win_mode
MODE_APPKEYPAD	st/win.h	/^	MODE_APPKEYPAD   = 1 << 2,$/;"	e	enum:win_mode
MODE_BLINK	st/win.h	/^	MODE_BLINK       = 1 << 11,$/;"	e	enum:win_mode
MODE_BRCKTPASTE	st/win.h	/^	MODE_BRCKTPASTE  = 1 << 16,$/;"	e	enum:win_mode
MODE_CRLF	st/st.c	/^	MODE_CRLF        = 1 << 3,$/;"	e	enum:term_mode	file:
MODE_ECHO	st/st.c	/^	MODE_ECHO        = 1 << 4,$/;"	e	enum:term_mode	file:
MODE_FBLINK	st/win.h	/^	MODE_FBLINK      = 1 << 12,$/;"	e	enum:win_mode
MODE_FOCUS	st/win.h	/^	MODE_FOCUS       = 1 << 13,$/;"	e	enum:win_mode
MODE_FOCUSED	st/win.h	/^	MODE_FOCUSED     = 1 << 1,$/;"	e	enum:win_mode
MODE_HIDE	st/win.h	/^	MODE_HIDE        = 1 << 7,$/;"	e	enum:win_mode
MODE_INSERT	st/st.c	/^	MODE_INSERT      = 1 << 1,$/;"	e	enum:term_mode	file:
MODE_KBDLOCK	st/win.h	/^	MODE_KBDLOCK     = 1 << 6,$/;"	e	enum:win_mode
MODE_MOUSE	st/win.h	/^	MODE_MOUSE       = MODE_MOUSEBTN|MODE_MOUSEMOTION|MODE_MOUSEX10\\$/;"	e	enum:win_mode
MODE_MOUSEBTN	st/win.h	/^	MODE_MOUSEBTN    = 1 << 3,$/;"	e	enum:win_mode
MODE_MOUSEMANY	st/win.h	/^	MODE_MOUSEMANY   = 1 << 15,$/;"	e	enum:win_mode
MODE_MOUSEMOTION	st/win.h	/^	MODE_MOUSEMOTION = 1 << 4,$/;"	e	enum:win_mode
MODE_MOUSESGR	st/win.h	/^	MODE_MOUSESGR    = 1 << 9,$/;"	e	enum:win_mode
MODE_MOUSEX10	st/win.h	/^	MODE_MOUSEX10    = 1 << 14,$/;"	e	enum:win_mode
MODE_NORMAL	st/win.h	/^	MODE_NORMAL      = 1 << 18,$/;"	e	enum:win_mode
MODE_NUMLOCK	st/win.h	/^	MODE_NUMLOCK     = 1 << 17,$/;"	e	enum:win_mode
MODE_PRINT	st/st.c	/^	MODE_PRINT       = 1 << 5,$/;"	e	enum:term_mode	file:
MODE_REVERSE	st/win.h	/^	MODE_REVERSE     = 1 << 5,$/;"	e	enum:win_mode
MODE_UTF8	st/st.c	/^	MODE_UTF8        = 1 << 6,$/;"	e	enum:term_mode	file:
MODE_VISIBLE	st/win.h	/^	MODE_VISIBLE     = 1 << 0,$/;"	e	enum:win_mode
MODE_WRAP	st/st.c	/^	MODE_WRAP        = 1 << 0,$/;"	e	enum:term_mode	file:
MODKEY	st/config.def.h	/^#define MODKEY /;"	d
MODKEY	st/config.h	/^#define MODKEY /;"	d
MotionState	st/normalMode.c	/^	struct MotionState { uint32_t c; int active; Pos searchPos; Search search; } m;$/;"	s	struct:NormalModeState	file:
MouseShortcut	st/x.c	/^} MouseShortcut;$/;"	t	typeref:struct:__anon1c6f2a240208	file:
NAME	st/st.1	/^.SH NAME$/;"	s	title:ST
NormalModeState	st/normalMode.c	/^struct NormalModeState {$/;"	s	file:
OBJ	st/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OPTIONS	st/st.1	/^.SH OPTIONS$/;"	s	title:ST
OUT	st/st.h	/^#define OUT(/;"	d
Op	st/normalMode.c	/^typedef enum {visual='v', visualLine='V', yank = 'y'} Op;$/;"	t	typeref:enum:__anon596f7d9a0203	file:
OperationState	st/normalMode.c	/^	struct OperationState { Op op; Infix infix; } cmd;$/;"	s	struct:NormalModeState	file:
PKG_CONFIG	st/config.mk	/^PKG_CONFIG = pkg-config$/;"	m
PREFIX	st/config.mk	/^PREFIX = \/usr\/local$/;"	m
Pos	st/normalMode.c	/^typedef struct { int p[3]; } Pos;$/;"	t	typeref:struct:__anon596f7d9a0108	file:
Rune	st/st.h	/^typedef uint_least32_t Rune;$/;"	t	typeref:typename:uint_least32_t
SEE	st/st.1	/^.SH SEE ALSO$/;"	s	title:ST
SEL_EMPTY	st/st.h	/^	SEL_EMPTY = 1,$/;"	e	enum:selection_mode
SEL_IDLE	st/st.h	/^	SEL_IDLE = 0,$/;"	e	enum:selection_mode
SEL_READY	st/st.h	/^	SEL_READY = 2$/;"	e	enum:selection_mode
SEL_RECTANGULAR	st/st.h	/^	SEL_RECTANGULAR = 2$/;"	e	enum:selection_type
SEL_REGULAR	st/st.h	/^	SEL_REGULAR = 1,$/;"	e	enum:selection_type
SHORTCUTS	st/st.1	/^.SH SHORTCUTS$/;"	s	title:ST
SNAP_LINE	st/st.h	/^	SNAP_LINE = 2$/;"	e	enum:selection_snap
SNAP_WORD	st/st.h	/^	SNAP_WORD = 1,$/;"	e	enum:selection_snap
SRC	st/Makefile	/^SRC = st.c x.c$/;"	m
ST	st/st.1	/^.TH ST 1 st\\-VERSION$/;"	t
STCFLAGS	st/config.mk	/^STCFLAGS = $(INCS) $(STCPPFLAGS) $(CPPFLAGS) $(CFLAGS)$/;"	m
STCPPFLAGS	st/config.mk	/^STCPPFLAGS = -DVERSION=\\"$(VERSION)\\" -D_XOPEN_SOURCE=600$/;"	m
STLDFLAGS	st/config.mk	/^STLDFLAGS = $(LIBS) $(LDFLAGS)$/;"	m
STREscape	st/st.c	/^} STREscape;$/;"	t	typeref:struct:__anonaa52d4130608	file:
STR_ARG_SIZ	st/st.c	/^#define STR_ARG_SIZ /;"	d	file:
STR_BUF_SIZ	st/st.c	/^#define STR_BUF_SIZ /;"	d	file:
SYNOPSIS	st/st.1	/^.SH SYNOPSIS$/;"	s	title:ST
Search	st/normalMode.c	/^typedef enum {fw='\/', bw='?'} Search;$/;"	t	typeref:enum:__anon596f7d9a0403	file:
Selection	st/st.c	/^} Selection;$/;"	t	typeref:struct:__anonaa52d4130208	file:
Shortcut	st/x.c	/^} Shortcut;$/;"	t	typeref:struct:__anon1c6f2a240108	file:
TCursor	st/st.c	/^} TCursor;$/;"	t	typeref:struct:__anonaa52d4130108	file:
TERMMOD	st/config.def.h	/^#define TERMMOD /;"	d
TERMMOD	st/config.h	/^#define TERMMOD /;"	d
TIMEDIFF	st/st.h	/^#define TIMEDIFF(/;"	d
TRUEBLUE	st/x.c	/^#define TRUEBLUE(/;"	d	file:
TRUECOLOR	st/st.h	/^#define TRUECOLOR(/;"	d
TRUEGREEN	st/x.c	/^#define TRUEGREEN(/;"	d	file:
TRUERED	st/x.c	/^#define TRUERED(/;"	d	file:
Term	st/st.c	/^} Term;$/;"	t	typeref:struct:__anonaa52d4130408	file:
TermWindow	st/x.c	/^} TermWindow;$/;"	t	typeref:struct:__anon1c6f2a240408	file:
UTF8_ARRAY	st/utils.h	/^#define UTF8_ARRAY /;"	d
UTF_INVALID	st/st.c	/^#define UTF_INVALID /;"	d	file:
UTF_SIZ	st/st.c	/^#define UTF_SIZ /;"	d	file:
VERSION	st/config.mk	/^VERSION = 0.8.5$/;"	m
X11INC	st/config.mk	/^X11INC = \/usr\/X11R6\/include$/;"	m
X11LIB	st/config.mk	/^X11LIB = \/usr\/X11R6\/lib$/;"	m
XEMBED_FOCUS_IN	st/x.c	/^#define XEMBED_FOCUS_IN /;"	d	file:
XEMBED_FOCUS_OUT	st/x.c	/^#define XEMBED_FOCUS_OUT /;"	d	file:
XK_ANY_MOD	st/x.c	/^#define XK_ANY_MOD /;"	d	file:
XK_NO_MOD	st/x.c	/^#define XK_NO_MOD /;"	d	file:
XK_SWITCH_MOD	st/x.c	/^#define XK_SWITCH_MOD /;"	d	file:
XSelection	st/x.c	/^} XSelection;$/;"	t	typeref:struct:__anon1c6f2a240708	file:
XWindow	st/x.c	/^} XWindow;$/;"	t	typeref:struct:__anon1c6f2a240508	file:
__anon1c6f2a240108	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240208	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240308	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240408	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240508	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240608	st/x.c	/^	struct {$/;"	s	struct:__anon1c6f2a240508	file:
__anon1c6f2a240708	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240808	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240908	st/x.c	/^typedef struct {$/;"	s	file:
__anon1c6f2a240a03	st/x.c	/^enum {$/;"	g	file:
__anon1c6f2a240b08	st/x.c	/^typedef struct {$/;"	s	file:
__anon596f7d9a0108	st/normalMode.c	/^typedef struct { int p[3]; } Pos;$/;"	s	file:
__anon596f7d9a0203	st/normalMode.c	/^typedef enum {visual='v', visualLine='V', yank = 'y'} Op;$/;"	g	file:
__anon596f7d9a0303	st/normalMode.c	/^typedef enum {infix_none=0, infix_i='i', infix_a='a'} Infix;$/;"	g	file:
__anon596f7d9a0403	st/normalMode.c	/^typedef enum {fw='\/', bw='?'} Search;$/;"	g	file:
__anon596f7d9f0103	st/normalMode.h	/^typedef enum {failed=0, success=1, exitMotion=2, exitOp=3, finish=4} ExitState;$/;"	g
__anon7383bd620108	st/utils.h	/^typedef struct { uint8_t const elSize; uint32_t init, alloc; char* content; } DynamicArray;$/;"	s
__anonaa52d4130108	st/st.c	/^typedef struct {$/;"	s	file:
__anonaa52d4130208	st/st.c	/^typedef struct {$/;"	s	file:
__anonaa52d4130308	st/st.c	/^	struct {$/;"	s	struct:__anonaa52d4130208	file:
__anonaa52d4130408	st/st.c	/^typedef struct {$/;"	s	file:
__anonaa52d4130508	st/st.c	/^typedef struct {$/;"	s	file:
__anonaa52d4130608	st/st.c	/^typedef struct {$/;"	s	file:
__anonaa52d4130708	st/st.c	/^	const struct { int idx; char *str; } osc_table[] = {$/;"	s	function:strhandle	file:
__anonaa52d4180108	st/st.h	/^typedef struct {$/;"	s
__anonaa52d418020a	st/st.h	/^typedef union {$/;"	u
a/Makefile	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^--- a\/Makefile$/;"	m
a/Makefile	patches/st-vim-browse-20220615-historyVanilla.diff	/^--- a\/Makefile$/;"	m
a/config.def.h	patches/st-alpha-osc11-20220222-0.8.5.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/st-font2-20190416-ba72400.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/st-history-20220615-43a395a.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/st-scrollback-20220615-historyVanilla.diff	/^--- a\/config.def.h$/;"	m
a/config.def.h	patches/st-vim-browse-20220615-historyVanilla.diff	/^--- a\/config.def.h$/;"	m
a/st.c	patches/st-columns-20220615-historyVanilla.diff	/^--- a\/st.c$/;"	m
a/st.c	patches/st-history-20220615-43a395a.diff	/^--- a\/st.c$/;"	m
a/st.c	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^--- a\/st.c$/;"	m
a/st.c	patches/st-scrollback-20220615-historyVanilla.diff	/^--- a\/st.c$/;"	m
a/st.c	patches/st-vim-browse-20220615-historyVanilla.diff	/^--- a\/st.c$/;"	m
a/st.h	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^--- a\/st.h$/;"	m
a/st.h	patches/st-scrollback-20220615-historyVanilla.diff	/^--- a\/st.h$/;"	m
a/st.h	patches/st-vim-browse-20220615-historyVanilla.diff	/^--- a\/st.h$/;"	m
a/win.h	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^--- a\/win.h$/;"	m
a/win.h	patches/st-vim-browse-20220615-historyVanilla.diff	/^--- a\/win.h$/;"	m
a/x.c	patches/st-alpha-osc11-20220222-0.8.5.diff	/^--- a\/x.c$/;"	m
a/x.c	patches/st-font2-20190416-ba72400.diff	/^--- a\/x.c$/;"	m
a/x.c	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^--- a\/x.c$/;"	m
a/x.c	patches/st-vim-browse-20220615-historyVanilla.diff	/^--- a\/x.c$/;"	m
active	st/normalMode.c	/^	struct MotionState { uint32_t c; int active; Pos searchPos; Search search; } m;$/;"	m	struct:NormalModeState::MotionState	typeref:typename:int	file:
all	st/Makefile	/^all: options st$/;"	t
alloc	st/utils.h	/^typedef struct { uint8_t const elSize; uint32_t init, alloc; char* content; } DynamicArray;$/;"	m	struct:__anon7383bd620108	typeref:typename:uint32_t
allowaltscreen	st/config.def.h	/^int allowaltscreen = 1;$/;"	v	typeref:typename:int
allowaltscreen	st/config.h	/^int allowaltscreen = 1;$/;"	v	typeref:typename:int
allowwindowops	st/config.def.h	/^int allowwindowops = 0;$/;"	v	typeref:typename:int
allowwindowops	st/config.h	/^int allowwindowops = 0;$/;"	v	typeref:typename:int
alpha	st/config.def.h	/^float alpha = 0.8;$/;"	v	typeref:typename:float
alpha	st/config.h	/^float alpha = 0.8;$/;"	v	typeref:typename:float
alt	st/st.c	/^	Line *alt;    \/* alternate screen *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:Line *	file:
alt	st/st.c	/^	int alt;$/;"	m	struct:__anonaa52d4130208	typeref:typename:int	file:
altToggle	st/st.c	/^int histOp, histMode, histOff, insertOff, altToggle, *mark;$/;"	v	typeref:typename:int
amountNmKeys	st/config.def.h	/^unsigned int const amountNmKeys = sizeof(nmKeys) \/ sizeof(*nmKeys);$/;"	v	typeref:typename:unsigned int const
amountNmKeys	st/config.h	/^unsigned int const amountNmKeys = sizeof(nmKeys) \/ sizeof(*nmKeys);$/;"	v	typeref:typename:unsigned int const
appcursor	st/x.c	/^	signed char appcursor; \/* application cursor *\/$/;"	m	struct:__anon1c6f2a240308	typeref:typename:signed char	file:
appkey	st/x.c	/^	signed char appkey;    \/* application keypad *\/$/;"	m	struct:__anon1c6f2a240308	typeref:typename:signed char	file:
applyPos	st/normalMode.c	/^static inline void applyPos(Pos p) {$/;"	f	typeref:typename:void	file:
arg	st/st.c	/^	int arg[ESC_ARG_SIZ];$/;"	m	struct:__anonaa52d4130508	typeref:typename:int[]	file:
arg	st/x.c	/^	const Arg arg;$/;"	m	struct:__anon1c6f2a240108	typeref:typename:const Arg	file:
arg	st/x.c	/^	const Arg arg;$/;"	m	struct:__anon1c6f2a240208	typeref:typename:const Arg	file:
args	st/st.c	/^	char *args[STR_ARG_SIZ];$/;"	m	struct:__anonaa52d4130608	typeref:typename:char * []	file:
argv0	st/x.c	/^char *argv0;$/;"	v	typeref:typename:char *
ascent	st/x.c	/^	int ascent;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:int	file:
ascii_printable	st/config.def.h	/^static char ascii_printable[] =$/;"	v	typeref:typename:char[]
ascii_printable	st/config.h	/^static char ascii_printable[] =$/;"	v	typeref:typename:char[]
assign	st/utils.h	/^static inline void assign(DynamicArray* s, DynamicArray const *o) { $/;"	f	typeref:typename:void
attr	st/st.c	/^	Glyph attr; \/* current char attributes *\/$/;"	m	struct:__anonaa52d4130108	typeref:typename:Glyph	file:
attrs	st/x.c	/^	XSetWindowAttributes attrs;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:XSetWindowAttributes	file:
b/normalMode.c	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^+++ b\/normalMode.c$/;"	n
b/normalMode.c	patches/st-vim-browse-20220615-historyVanilla.diff	/^+++ b\/normalMode.c$/;"	n
b/normalMode.h	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^+++ b\/normalMode.h$/;"	n
b/normalMode.h	patches/st-vim-browse-20220615-historyVanilla.diff	/^+++ b\/normalMode.h$/;"	n
b/utils.h	patches/st-meta-vim-full-20210425-43a395a-8.4.patch	/^+++ b\/utils.h$/;"	n
b/utils.h	patches/st-vim-browse-20220615-historyVanilla.diff	/^+++ b\/utils.h$/;"	n
badslant	st/x.c	/^	int badslant;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:int	file:
badweight	st/x.c	/^	int badweight;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:int	file:
base64dec	st/st.c	/^base64dec(const char *src)$/;"	f	typeref:typename:char *
base64dec_getc	st/st.c	/^base64dec_getc(const char **src)$/;"	f	typeref:typename:char
bellvolume	st/config.def.h	/^static int bellvolume = 0;$/;"	v	typeref:typename:int
bellvolume	st/config.h	/^static int bellvolume = 0;$/;"	v	typeref:typename:int
bfont	st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon1c6f2a240908	typeref:typename:Font	file:
bg	st/st.h	/^	uint32_t bg;      \/* background  *\/$/;"	m	struct:__anonaa52d4180108	typeref:typename:uint32_t
blinktimeout	st/config.def.h	/^static unsigned int blinktimeout = 800;$/;"	v	typeref:typename:unsigned int
blinktimeout	st/config.h	/^static unsigned int blinktimeout = 800;$/;"	v	typeref:typename:unsigned int
bmotion	st/x.c	/^bmotion(XEvent *e)$/;"	f	typeref:typename:void
borderpx	st/config.def.h	/^static int borderpx = 0;$/;"	v	typeref:typename:int
borderpx	st/config.h	/^static int borderpx = 0;$/;"	v	typeref:typename:int
bot	st/st.c	/^	int bot;      \/* bottom scroll limit *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
bpress	st/x.c	/^bpress(XEvent *e)$/;"	f	typeref:typename:void
braces	st/normalMode.c	/^char posBuffer[10], braces[6][3] = { {"()"}, {"<>"}, {"{}"}, {"[]"}, {"\\"\\""}, {"''"}};$/;"	v	typeref:typename:char[6][3]
brelease	st/x.c	/^brelease(XEvent *e)$/;"	f	typeref:typename:void
buf	st/st.c	/^	char *buf;             \/* allocated raw string *\/$/;"	m	struct:__anonaa52d4130608	typeref:typename:char *	file:
buf	st/st.c	/^	char buf[ESC_BUF_SIZ]; \/* raw string *\/$/;"	m	struct:__anonaa52d4130508	typeref:typename:char[]	file:
buf	st/st.c	/^Line *buf = NULL;$/;"	v	typeref:typename:Line *
buf	st/x.c	/^	Drawable buf;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Drawable	file:
buffCols	st/st.c	/^int buffCols;$/;"	v	typeref:typename:int
buffSize	st/config.def.h	/^unsigned int const currentBg = 6, buffSize = 2048;$/;"	v	typeref:typename:unsigned int const
buffSize	st/config.h	/^unsigned int const currentBg = 6, buffSize = 2048;$/;"	v	typeref:typename:unsigned int const
button	st/x.c	/^	uint button;$/;"	m	struct:__anon1c6f2a240208	typeref:typename:uint	file:
buttonmask	st/x.c	/^buttonmask(uint button)$/;"	f	typeref:typename:uint
buttons	st/x.c	/^static uint buttons; \/* bit field of pressed buttons *\/$/;"	v	typeref:typename:uint	file:
bw	st/normalMode.c	/^typedef enum {fw='\/', bw='?'} Search;$/;"	e	enum:__anon596f7d9a0403	file:
c	st/normalMode.c	/^	struct MotionState { uint32_t c; int active; Pos searchPos; Search search; } m;$/;"	m	struct:NormalModeState::MotionState	typeref:typename:uint32_t	file:
c	st/st.c	/^	TCursor c;    \/* cursor *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:TCursor	file:
c	st/st.c	/^static TCursor c[3];$/;"	v	typeref:typename:TCursor[3]	file:
cChar	st/normalMode.c	/^static inline Rune cChar() { return term.line[term.c.y][term.c.x].u; }$/;"	f	typeref:typename:Rune	file:
cCmd	st/normalMode.c	/^DynamicArray searchStr=UTF8_ARRAY, cCmd=UTF8_ARRAY, lCmd=UTF8_ARRAY;$/;"	v	typeref:typename:DynamicArray
ch	st/x.c	/^	int ch; \/* char height *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
charset	st/st.c	/^	int charset;  \/* current charset *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
charset	st/st.c	/^enum charset {$/;"	g	file:
chscale	st/config.def.h	/^static float chscale = 1.0;$/;"	v	typeref:typename:float
chscale	st/config.h	/^static float chscale = 1.0;$/;"	v	typeref:typename:float
clean	st/Makefile	/^clean:$/;"	t
clipboard	st/x.c	/^	char *primary, *clipboard;$/;"	m	struct:__anon1c6f2a240708	typeref:typename:char *	file:
clipcopy	st/x.c	/^clipcopy(const Arg *dummy)$/;"	f	typeref:typename:void
clippaste	st/x.c	/^clippaste(const Arg *dummy)$/;"	f	typeref:typename:void
cmap	st/x.c	/^	Colormap cmap;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Colormap	file:
cmd	st/normalMode.c	/^	struct OperationState { Op op; Infix infix; } cmd;$/;"	m	struct:NormalModeState	typeref:struct:NormalModeState::OperationState	file:
cmdfd	st/st.c	/^static int cmdfd;$/;"	v	typeref:typename:int	file:
cmessage	st/x.c	/^cmessage(XEvent *e)$/;"	f	typeref:typename:void
col	st/st.c	/^	int col;      \/* nb col *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
col	st/x.c	/^	Color *col;$/;"	m	struct:__anon1c6f2a240908	typeref:typename:Color *	file:
collen	st/x.c	/^	size_t collen;$/;"	m	struct:__anon1c6f2a240908	typeref:typename:size_t	file:
cols	st/config.def.h	/^static unsigned int cols = 80;$/;"	v	typeref:typename:unsigned int
cols	st/config.h	/^static unsigned int cols = 80;$/;"	v	typeref:typename:unsigned int
config.h	st/Makefile	/^config.h:$/;"	t
contains	st/normalMode.c	/^static inline int contains(Rune l, char const * values, size_t const memSize) {$/;"	f	typeref:typename:int	file:
content	st/utils.h	/^typedef struct { uint8_t const elSize; uint32_t init, alloc; char* content; } DynamicArray;$/;"	m	struct:__anon7383bd620108	typeref:typename:char *
cresize	st/x.c	/^cresize(int width, int height)$/;"	f	typeref:typename:void
csidump	st/st.c	/^csidump(void)$/;"	f	typeref:typename:void
csiescseq	st/st.c	/^static CSIEscape csiescseq;$/;"	v	typeref:typename:CSIEscape	file:
csihandle	st/st.c	/^csihandle(void)$/;"	f	typeref:typename:void
csiparse	st/st.c	/^csiparse(void)$/;"	f	typeref:typename:void
csireset	st/st.c	/^csireset(void)$/;"	f	typeref:typename:void
currentBg	st/config.def.h	/^unsigned int const currentBg = 6, buffSize = 2048;$/;"	v	typeref:typename:unsigned int const
currentBg	st/config.h	/^unsigned int const currentBg = 6, buffSize = 2048;$/;"	v	typeref:typename:unsigned int const
cursor	st/x.c	/^	int cursor; \/* cursor style *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
cursor_movement	st/st.c	/^enum cursor_movement {$/;"	g	file:
cursor_state	st/st.c	/^enum cursor_state {$/;"	g	file:
cursorshape	st/config.def.h	/^static unsigned int cursorshape = 2;$/;"	v	typeref:typename:unsigned int
cursorshape	st/config.h	/^static unsigned int cursorshape = 2;$/;"	v	typeref:typename:unsigned int
cursorthickness	st/config.def.h	/^static unsigned int cursorthickness = 2;$/;"	v	typeref:typename:unsigned int
cursorthickness	st/config.h	/^static unsigned int cursorthickness = 2;$/;"	v	typeref:typename:unsigned int
cw	st/x.c	/^	int cw; \/* char width  *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
cwscale	st/config.def.h	/^static float cwscale = 1.0;$/;"	v	typeref:typename:float
cwscale	st/config.h	/^static float cwscale = 1.0;$/;"	v	typeref:typename:float
dc	st/x.c	/^static DC dc;$/;"	v	typeref:typename:DC	file:
decodeTo	st/normalMode.c	/^static inline void decodeTo(char const *cs, size_t len, DynamicArray *arr) {$/;"	f	typeref:typename:void	file:
defaultNormalMode	st/normalMode.c	/^} defaultNormalMode, state;$/;"	v	typeref:struct:NormalModeState
defaultattr	st/config.def.h	/^static unsigned int defaultattr = 11;$/;"	v	typeref:typename:unsigned int
defaultattr	st/config.h	/^static unsigned int defaultattr = 11;$/;"	v	typeref:typename:unsigned int
defaultfontsize	st/x.c	/^static double defaultfontsize = 0;$/;"	v	typeref:typename:double	file:
defaultitalic	st/config.def.h	/^unsigned int defaultitalic = 7;$/;"	v	typeref:typename:unsigned int
defaultitalic	st/config.h	/^unsigned int defaultitalic = 7;$/;"	v	typeref:typename:unsigned int
defaultunderline	st/config.def.h	/^unsigned int defaultunderline = 7;$/;"	v	typeref:typename:unsigned int
defaultunderline	st/config.h	/^unsigned int defaultunderline = 7;$/;"	v	typeref:typename:unsigned int
depth	st/x.c	/^	int depth; \/* bit depth *\/$/;"	m	struct:__anon1c6f2a240508	typeref:typename:int	file:
descent	st/x.c	/^	int descent;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:int	file:
die	st/st.c	/^die(const char *errstr, ...)$/;"	f	typeref:typename:void
dirty	st/st.c	/^	int *dirty;   \/* dirtyness of lines *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int *	file:
dist	st/Makefile	/^dist: clean$/;"	t
doubleclicktimeout	st/config.def.h	/^static unsigned int doubleclicktimeout = 300;$/;"	v	typeref:typename:unsigned int
doubleclicktimeout	st/config.h	/^static unsigned int doubleclicktimeout = 300;$/;"	v	typeref:typename:unsigned int
dpy	st/x.c	/^	Display *dpy;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Display *	file:
draw	st/st.c	/^draw(void)$/;"	f	typeref:typename:void
draw	st/x.c	/^	Draw draw;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Draw	file:
drawregion	st/st.c	/^drawregion(int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
elSize	st/utils.h	/^typedef struct { uint8_t const elSize; uint32_t init, alloc; char* content; } DynamicArray;$/;"	m	struct:__anon7383bd620108	typeref:typename:uint8_t const
empty	st/utils.h	/^static inline void empty(DynamicArray* s) { s->init = 0; }$/;"	f	typeref:typename:void
end	st/utils.h	/^static inline char *end(DynamicArray *s, uint32_t i) { return s->content +s->init-(i+1)*s->elSiz/;"	f	typeref:typename:char *
esc	st/st.c	/^	int esc;      \/* escape state flags *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
escape_state	st/st.c	/^enum escape_state {$/;"	g	file:
eschandle	st/st.c	/^eschandle(uchar ascii)$/;"	f	typeref:typename:int
evcol	st/x.c	/^evcol(XEvent *e)$/;"	f	typeref:typename:int
evrow	st/x.c	/^evrow(XEvent *e)$/;"	f	typeref:typename:int
execsh	st/st.c	/^execsh(char *cmd, char **args)$/;"	f	typeref:typename:void
executeCommand	st/normalMode.c	/^static ExitState executeCommand(uint32_t *cs, size_t z) {$/;"	f	typeref:typename:ExitState	file:
executeMotion	st/normalMode.c	/^ExitState executeMotion(char const cs, KeySym const *const ks) {$/;"	f	typeref:typename:ExitState
exitMotion	st/normalMode.h	/^typedef enum {failed=0, success=1, exitMotion=2, exitOp=3, finish=4} ExitState;$/;"	e	enum:__anon596f7d9f0103
exitOp	st/normalMode.h	/^typedef enum {failed=0, success=1, exitMotion=2, exitOp=3, finish=4} ExitState;$/;"	e	enum:__anon596f7d9f0103
exited	st/normalMode.c	/^int exited=1, overlay=1;$/;"	v	typeref:typename:int
expand	st/utils.h	/^static char *expand(DynamicArray *s) { if (!p_alloc(s, 1)) return NULL; s->init += s->elSize; re/;"	f	typeref:typename:char *
expandExpression	st/normalMode.c	/^static ExitState expandExpression(char l) { \/\/    ({ =>)       l  ?  {  \\n | l | v  \/  } \\n/;"	f	typeref:typename:ExitState	file:
expose	st/x.c	/^expose(XEvent *ev)$/;"	f	typeref:typename:void
f	st/st.h	/^	float f;$/;"	m	union:__anonaa52d418020a	typeref:typename:float
failed	st/normalMode.h	/^typedef enum {failed=0, success=1, exitMotion=2, exitOp=3, finish=4} ExitState;$/;"	e	enum:__anon596f7d9f0103
fg	st/st.h	/^	uint32_t fg;      \/* foreground  *\/$/;"	m	struct:__anonaa52d4180108	typeref:typename:uint32_t
findString	st/normalMode.c	/^static int findString(int s, int all) {$/;"	f	typeref:typename:int	file:
finish	st/normalMode.h	/^typedef enum {failed=0, success=1, exitMotion=2, exitOp=3, finish=4} ExitState;$/;"	e	enum:__anon596f7d9f0103
flags	st/x.c	/^	int flags;$/;"	m	struct:__anon1c6f2a240b08	typeref:typename:int	file:
focus	st/x.c	/^focus(XEvent *ev)$/;"	f	typeref:typename:void
font	st/config.def.h	/^static char *font = "FiraCode Nerd Font Mono:pixelsize=14:style=Retina";$/;"	v	typeref:typename:char *
font	st/config.h	/^static char *font = "FiraCode Nerd Font Mono:pixelsize=14:style=Retina";$/;"	v	typeref:typename:char *
font	st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon1c6f2a240908	typeref:typename:Font	file:
font	st/x.c	/^	XftFont *font;$/;"	m	struct:__anon1c6f2a240b08	typeref:typename:XftFont *	file:
font2	st/config.def.h	/^static char *font2[] = {$/;"	v	typeref:typename:char * []
font2	st/config.h	/^static char *font2[] = {$/;"	v	typeref:typename:char * []
forcemousemod	st/config.def.h	/^static uint forcemousemod = ShiftMask;$/;"	v	typeref:typename:uint
forcemousemod	st/config.h	/^static uint forcemousemod = ShiftMask;$/;"	v	typeref:typename:uint
frc	st/x.c	/^static Fontcache *frc = NULL;$/;"	v	typeref:typename:Fontcache *	file:
frccap	st/x.c	/^static int frccap = 0;$/;"	v	typeref:typename:int	file:
frclen	st/x.c	/^static int frclen = 0;$/;"	v	typeref:typename:int	file:
func	st/x.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon1c6f2a240108	typeref:typename:void (*)(const Arg *)	file:
func	st/x.c	/^	void (*func)(const Arg *);$/;"	m	struct:__anon1c6f2a240208	typeref:typename:void (*)(const Arg *)	file:
fw	st/normalMode.c	/^typedef enum {fw='\/', bw='?'} Search;$/;"	e	enum:__anon596f7d9a0403	file:
gc	st/x.c	/^	GC gc;$/;"	m	struct:__anon1c6f2a240908	typeref:typename:GC	file:
getChar	st/normalMode.c	/^static void getChar(DynamicArray *st, Glyph *glyphChange, int y, int xEnd, int width, int x) {$/;"	f	typeref:typename:void	file:
getU32	st/utils.h	/^static inline uint32_t getU32(DynamicArray* s, uint32_t i, int b) { return *((uint32_t*) (b ?vie/;"	f	typeref:typename:uint32_t
getsel	st/st.c	/^getsel(void)$/;"	f	typeref:typename:char *
glyph_attribute	st/st.h	/^enum glyph_attribute {$/;"	g
gm	st/x.c	/^	int gm; \/* geometry mask *\/$/;"	m	struct:__anon1c6f2a240508	typeref:typename:int	file:
h	st/x.c	/^	int w, h; \/* window width and height *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
handler	st/x.c	/^static void (*handler[LASTEvent])(XEvent *) = {$/;"	v	typeref:typename:void (* [LASTEvent])(XEvent *)	file:
height	st/x.c	/^	int height;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:int	file:
highlightBg	st/config.def.h	/^unsigned int const highlightBg = 169, highlightFg = 15;$/;"	v	typeref:typename:unsigned int const
highlightBg	st/config.h	/^unsigned int const highlightBg = 169, highlightFg = 15;$/;"	v	typeref:typename:unsigned int const
highlightFg	st/config.def.h	/^unsigned int const highlightBg = 169, highlightFg = 15;$/;"	v	typeref:typename:unsigned int const
highlightFg	st/config.h	/^unsigned int const highlightBg = 169, highlightFg = 15;$/;"	v	typeref:typename:unsigned int const
highlighted	st/normalMode.c	/^static int highlighted(int x, int y) {$/;"	f	typeref:typename:int	file:
histMode	st/st.c	/^int histOp, histMode, histOff, insertOff, altToggle, *mark;$/;"	v	typeref:typename:int
histOff	st/st.c	/^int histOp, histMode, histOff, insertOff, altToggle, *mark;$/;"	v	typeref:typename:int
histOp	st/st.c	/^int histOp, histMode, histOff, insertOff, altToggle, *mark;$/;"	v	typeref:typename:int
historyBufferScroll	st/st.c	/^int historyBufferScroll(int n) {$/;"	f	typeref:typename:int
historyModeToggle	st/st.c	/^void historyModeToggle(int start) {$/;"	f	typeref:typename:void
historyMove	st/st.c	/^int historyMove(int x, int y, int ly) {$/;"	f	typeref:typename:int
historyOpToggle	st/st.c	/^void historyOpToggle(int start, int paint) {$/;"	f	typeref:typename:void
historyOverlay	st/normalMode.c	/^void historyOverlay(int x, int y, Glyph* g) {$/;"	f	typeref:typename:void
historyPreDraw	st/normalMode.c	/^void historyPreDraw() {$/;"	f	typeref:typename:void
i	st/st.h	/^	int i;$/;"	m	union:__anonaa52d418020a	typeref:typename:int
ibfont	st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon1c6f2a240908	typeref:typename:Font	file:
icharset	st/st.c	/^	int icharset; \/* selected charset for sequence *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
idx	st/st.c	/^	const struct { int idx; char *str; } osc_table[] = {$/;"	m	struct:strhandle::__anonaa52d4130708	typeref:typename:int	file:
ifont	st/x.c	/^	Font font, bfont, ifont, ibfont;$/;"	m	struct:__anon1c6f2a240908	typeref:typename:Font	file:
ignoremod	st/config.def.h	/^static uint ignoremod = Mod2Mask|XK_SWITCH_MOD;$/;"	v	typeref:typename:uint
ignoremod	st/config.h	/^static uint ignoremod = Mod2Mask|XK_SWITCH_MOD;$/;"	v	typeref:typename:uint
ime	st/x.c	/^	} ime;$/;"	m	struct:__anon1c6f2a240508	typeref:struct:__anon1c6f2a240508::__anon1c6f2a240608	file:
infix	st/normalMode.c	/^	struct OperationState { Op op; Infix infix; } cmd;$/;"	m	struct:NormalModeState::OperationState	typeref:typename:Infix	file:
infix_a	st/normalMode.c	/^typedef enum {infix_none=0, infix_i='i', infix_a='a'} Infix;$/;"	e	enum:__anon596f7d9a0303	file:
infix_i	st/normalMode.c	/^typedef enum {infix_none=0, infix_i='i', infix_a='a'} Infix;$/;"	e	enum:__anon596f7d9a0303	file:
infix_none	st/normalMode.c	/^typedef enum {infix_none=0, infix_i='i', infix_a='a'} Infix;$/;"	e	enum:__anon596f7d9a0303	file:
init	st/utils.h	/^typedef struct { uint8_t const elSize; uint32_t init, alloc; char* content; } DynamicArray;$/;"	m	struct:__anon7383bd620108	typeref:typename:uint32_t
insertOff	st/st.c	/^int histOp, histMode, histOff, insertOff, altToggle, *mark;$/;"	v	typeref:typename:int
install	st/Makefile	/^install: st$/;"	t
iofd	st/st.c	/^static int iofd = 1;$/;"	v	typeref:typename:int	file:
isfixed	st/x.c	/^	int isfixed; \/* is fixed geometry? *\/$/;"	m	struct:__anon1c6f2a240508	typeref:typename:int	file:
k	st/x.c	/^	KeySym k;$/;"	m	struct:__anon1c6f2a240308	typeref:typename:KeySym	file:
kPressHist	st/normalMode.c	/^ExitState kPressHist(char const *cs, size_t len, int ctrl, KeySym const *kSym) {$/;"	f	typeref:typename:ExitState
key	st/config.def.h	/^static Key key[] = {$/;"	v	typeref:typename:Key[]
key	st/config.h	/^static Key key[] = {$/;"	v	typeref:typename:Key[]
keysym	st/x.c	/^	KeySym keysym;$/;"	m	struct:__anon1c6f2a240108	typeref:typename:KeySym	file:
kmap	st/x.c	/^kmap(KeySym k, uint state)$/;"	f	typeref:typename:char *
kpress	st/x.c	/^kpress(XEvent *ev)$/;"	f	typeref:typename:void
l	st/x.c	/^	int l, t; \/* left and top offset *\/$/;"	m	struct:__anon1c6f2a240508	typeref:typename:int	file:
lCmd	st/normalMode.c	/^DynamicArray searchStr=UTF8_ARRAY, cCmd=UTF8_ARRAY, lCmd=UTF8_ARRAY;$/;"	v	typeref:typename:DynamicArray
lastc	st/st.c	/^	Rune lastc;   \/* last printed char outside of sequence, 0 if control *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:Rune	file:
lbearing	st/x.c	/^	short lbearing;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:short	file:
len	st/st.c	/^	size_t len;            \/* raw string length *\/$/;"	m	struct:__anonaa52d4130508	typeref:typename:size_t	file:
len	st/st.c	/^	size_t len;            \/* raw string length *\/$/;"	m	struct:__anonaa52d4130608	typeref:typename:size_t	file:
line	st/st.c	/^	Line *line;   \/* screen *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:Line *	file:
m	st/normalMode.c	/^	struct MotionState { uint32_t c; int active; Pos searchPos; Search search; } m;$/;"	m	struct:NormalModeState	typeref:struct:NormalModeState::MotionState	file:
main	st/x.c	/^main(int argc, char *argv[])$/;"	f	typeref:typename:int
mappedkeys	st/config.def.h	/^static KeySym mappedkeys[] = { -1 };$/;"	v	typeref:typename:KeySym[]
mappedkeys	st/config.h	/^static KeySym mappedkeys[] = { -1 };$/;"	v	typeref:typename:KeySym[]
mark	st/st.c	/^int histOp, histMode, histOff, insertOff, altToggle, *mark;$/;"	v	typeref:typename:int *
markSearchMatches	st/normalMode.c	/^static void markSearchMatches(int all) {$/;"	f	typeref:typename:void	file:
mask	st/x.c	/^	uint mask;$/;"	m	struct:__anon1c6f2a240308	typeref:typename:uint	file:
match	st/x.c	/^	XftFont *match;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:XftFont *	file:
match	st/x.c	/^match(uint mask, uint state)$/;"	f	typeref:typename:int
max	st/st.c	/^static inline int max(int a, int b) { return a > b ? a : b; }$/;"	f	typeref:typename:int	file:
maxlatency	st/config.def.h	/^static double maxlatency = 33;$/;"	v	typeref:typename:double
maxlatency	st/config.h	/^static double maxlatency = 33;$/;"	v	typeref:typename:double
min	st/st.c	/^static inline int min(int a, int b) { return a < b ? a : b; }$/;"	f	typeref:typename:int	file:
minlatency	st/config.def.h	/^static double minlatency = 8;$/;"	v	typeref:typename:double
minlatency	st/config.h	/^static double minlatency = 8;$/;"	v	typeref:typename:double
mod	st/x.c	/^	uint mod;$/;"	m	struct:__anon1c6f2a240108	typeref:typename:uint	file:
mod	st/x.c	/^	uint mod;$/;"	m	struct:__anon1c6f2a240208	typeref:typename:uint	file:
mode	st/st.c	/^	char mode[2];$/;"	m	struct:__anonaa52d4130508	typeref:typename:char[2]	file:
mode	st/st.c	/^	int mode;     \/* terminal mode flags *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
mode	st/st.c	/^	int mode;$/;"	m	struct:__anonaa52d4130208	typeref:typename:int	file:
mode	st/st.h	/^	ushort mode;      \/* attribute flags *\/$/;"	m	struct:__anonaa52d4180108	typeref:typename:ushort
mode	st/x.c	/^	int mode; \/* window state\/mode flags *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
mouseSelect	st/config.def.h	/^int const mouseYank = 1, mouseSelect = 0;$/;"	v	typeref:typename:int const
mouseSelect	st/config.h	/^int const mouseYank = 1, mouseSelect = 0;$/;"	v	typeref:typename:int const
mouseYank	st/config.def.h	/^int const mouseYank = 1, mouseSelect = 0;$/;"	v	typeref:typename:int const
mouseYank	st/config.h	/^int const mouseYank = 1, mouseSelect = 0;$/;"	v	typeref:typename:int const
mouseaction	st/x.c	/^mouseaction(XEvent *e, uint release)$/;"	f	typeref:typename:int
mousebg	st/config.def.h	/^static unsigned int mousebg = 0;$/;"	v	typeref:typename:unsigned int
mousebg	st/config.h	/^static unsigned int mousebg = 0;$/;"	v	typeref:typename:unsigned int
mousefg	st/config.def.h	/^static unsigned int mousefg = 7;$/;"	v	typeref:typename:unsigned int
mousefg	st/config.h	/^static unsigned int mousefg = 7;$/;"	v	typeref:typename:unsigned int
mousereport	st/x.c	/^mousereport(XEvent *e)$/;"	f	typeref:typename:void
mousesel	st/x.c	/^mousesel(XEvent *e, int done)$/;"	f	typeref:typename:void
mouseshape	st/config.def.h	/^static unsigned int mouseshape = XC_xterm;$/;"	v	typeref:typename:unsigned int
mouseshape	st/config.h	/^static unsigned int mouseshape = XC_xterm;$/;"	v	typeref:typename:unsigned int
mshortcuts	st/config.def.h	/^static MouseShortcut mshortcuts[] = {$/;"	v	typeref:typename:MouseShortcut[]
mshortcuts	st/config.h	/^static MouseShortcut mshortcuts[] = {$/;"	v	typeref:typename:MouseShortcut[]
narg	st/st.c	/^	int narg;              \/* nb of args *\/$/;"	m	struct:__anonaa52d4130508	typeref:typename:int	file:
narg	st/st.c	/^	int narg;              \/* nb of args *\/$/;"	m	struct:__anonaa52d4130608	typeref:typename:int	file:
nb	st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anonaa52d4130208	typeref:struct:__anonaa52d4130208::__anonaa52d4130308	file:
ne	st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anonaa52d4130208	typeref:struct:__anonaa52d4130208::__anonaa52d4130308	file:
netwmiconname	st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmiconname, netwmpid;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Atom	file:
netwmname	st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmiconname, netwmpid;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Atom	file:
netwmpid	st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmiconname, netwmpid;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Atom	file:
nmKeys	st/config.def.h	/^char *nmKeys [] = {              \/\/\/< Shortcusts executed in normal mode$/;"	v	typeref:typename:char * []
nmKeys	st/config.h	/^char *nmKeys [] = {              \/\/\/< Shortcusts executed in normal mode$/;"	v	typeref:typename:char * []
normalMode	st/x.c	/^void normalMode() { historyModeToggle((win.mode ^=MODE_NORMAL) & MODE_NORMAL); }$/;"	f	typeref:typename:void
numlock	st/x.c	/^numlock(const Arg *dummy)$/;"	f	typeref:typename:void
ob	st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anonaa52d4130208	typeref:struct:__anonaa52d4130208::__anonaa52d4130308	file:
ocx	st/st.c	/^	int ocx;      \/* old cursor col *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
ocy	st/st.c	/^	int ocy;      \/* old cursor row *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
oe	st/st.c	/^	} nb, ne, ob, oe;$/;"	m	struct:__anonaa52d4130208	typeref:struct:__anonaa52d4130208::__anonaa52d4130308	file:
op	st/normalMode.c	/^	struct OperationState { Op op; Infix infix; } cmd;$/;"	m	struct:NormalModeState::OperationState	typeref:typename:Op	file:
opt_class	st/x.c	/^static char *opt_class = NULL;$/;"	v	typeref:typename:char *	file:
opt_cmd	st/x.c	/^static char **opt_cmd  = NULL;$/;"	v	typeref:typename:char **	file:
opt_embed	st/x.c	/^static char *opt_embed = NULL;$/;"	v	typeref:typename:char *	file:
opt_font	st/x.c	/^static char *opt_font  = NULL;$/;"	v	typeref:typename:char *	file:
opt_io	st/x.c	/^static char *opt_io    = NULL;$/;"	v	typeref:typename:char *	file:
opt_line	st/x.c	/^static char *opt_line  = NULL;$/;"	v	typeref:typename:char *	file:
opt_name	st/x.c	/^static char *opt_name  = NULL;$/;"	v	typeref:typename:char *	file:
opt_title	st/x.c	/^static char *opt_title = NULL;$/;"	v	typeref:typename:char *	file:
options	st/Makefile	/^options:$/;"	t
osc_color_response	st/st.c	/^osc_color_response(int num, int index, int is_osc4)$/;"	f	typeref:typename:void
overlay	st/normalMode.c	/^int exited=1, overlay=1;$/;"	v	typeref:typename:int
p	st/normalMode.c	/^typedef struct { int p[3]; } Pos;$/;"	m	struct:__anon596f7d9a0108	typeref:typename:int[3]	file:
p_alloc	st/utils.h	/^static inline int p_alloc(DynamicArray *s, uint32_t amount) {$/;"	f	typeref:typename:int
pattern	st/x.c	/^	FcPattern *pattern;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:FcPattern *	file:
pid	st/st.c	/^static pid_t pid;$/;"	v	typeref:typename:pid_t	file:
pop	st/utils.h	/^static inline void pop(DynamicArray* s) { s->init -= s->elSize; }$/;"	f	typeref:typename:void
pos	st/normalMode.c	/^static inline int pos(int p, int h) {return IS_SET(MODE_ALTSCREEN)?p:rangeY(p+h*histOff-insertOf/;"	f	typeref:typename:int	file:
posBuffer	st/normalMode.c	/^char posBuffer[10], braces[6][3] = { {"()"}, {"<>"}, {"{}"}, {"[]"}, {"\\"\\""}, {"''"}};$/;"	v	typeref:typename:char[10]
pressKeys	st/normalMode.c	/^ExitState pressKeys(char const* s, size_t e) {$/;"	f	typeref:typename:ExitState
primary	st/x.c	/^	char *primary, *clipboard;$/;"	m	struct:__anon1c6f2a240708	typeref:typename:char *	file:
printscreen	st/st.c	/^printscreen(const Arg *arg)$/;"	f	typeref:typename:void
printsel	st/st.c	/^printsel(const Arg *arg)$/;"	f	typeref:typename:void
priv	st/st.c	/^	char priv;$/;"	m	struct:__anonaa52d4130508	typeref:typename:char	file:
propnotify	st/x.c	/^propnotify(XEvent *e)$/;"	f	typeref:typename:void
rangeY	st/st.c	/^static inline int rangeY(int i) { while (i < 0) i += rows(); return i % rows();}$/;"	f	typeref:typename:int	file:
rbearing	st/x.c	/^	short rbearing;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:short	file:
redraw	st/st.c	/^redraw(void)$/;"	f	typeref:typename:void
release	st/x.c	/^	uint  release;$/;"	m	struct:__anon1c6f2a240208	typeref:typename:uint	file:
resettitle	st/st.c	/^resettitle(void)$/;"	f	typeref:typename:void
resize	st/x.c	/^resize(XEvent *e)$/;"	f	typeref:typename:void
row	st/st.c	/^	int row;      \/* nb row *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
rows	st/config.def.h	/^static unsigned int rows = 24;$/;"	v	typeref:typename:unsigned int
rows	st/config.h	/^static unsigned int rows = 24;$/;"	v	typeref:typename:unsigned int
rows	st/st.c	/^static inline int rows() { return IS_SET(MODE_ALTSCREEN) ? term.row : buffSize;}$/;"	f	typeref:typename:int	file:
run	st/x.c	/^run(void)$/;"	f	typeref:typename:void
s	st/st.h	/^	const char *s;$/;"	m	union:__anonaa52d418020a	typeref:typename:const char *
s	st/x.c	/^	char *s;$/;"	m	struct:__anon1c6f2a240308	typeref:typename:char *	file:
scr	st/x.c	/^	int scr;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:int	file:
scroll	st/config.def.h	/^char *scroll = NULL;$/;"	v	typeref:typename:char *
scroll	st/config.h	/^char *scroll = NULL;$/;"	v	typeref:typename:char *
search	st/normalMode.c	/^	struct MotionState { uint32_t c; int active; Pos searchPos; Search search; } m;$/;"	m	struct:NormalModeState::MotionState	typeref:typename:Search	file:
searchPos	st/normalMode.c	/^	struct MotionState { uint32_t c; int active; Pos searchPos; Search search; } m;$/;"	m	struct:NormalModeState::MotionState	typeref:typename:Pos	file:
searchStr	st/normalMode.c	/^DynamicArray searchStr=UTF8_ARRAY, cCmd=UTF8_ARRAY, lCmd=UTF8_ARRAY;$/;"	v	typeref:typename:DynamicArray
sel	st/st.c	/^static Selection sel;$/;"	v	typeref:typename:Selection	file:
selclear	st/st.c	/^selclear(void)$/;"	f	typeref:typename:void
selclear_	st/x.c	/^selclear_(XEvent *e)$/;"	f	typeref:typename:void
selected	st/st.c	/^selected(int x, int y)$/;"	f	typeref:typename:int
selection_mode	st/st.h	/^enum selection_mode {$/;"	g
selection_snap	st/st.h	/^enum selection_snap {$/;"	g
selection_type	st/st.h	/^enum selection_type {$/;"	g
selextend	st/st.c	/^selextend(int col, int row, int type, int done)$/;"	f	typeref:typename:void
selinit	st/st.c	/^selinit(void)$/;"	f	typeref:typename:void
selmasks	st/config.def.h	/^static uint selmasks[] = {$/;"	v	typeref:typename:uint[]
selmasks	st/config.h	/^static uint selmasks[] = {$/;"	v	typeref:typename:uint[]
selnormalize	st/st.c	/^void selnormalize(void) {$/;"	f	typeref:typename:void
selnotify	st/x.c	/^selnotify(XEvent *e)$/;"	f	typeref:typename:void
selpaste	st/x.c	/^selpaste(const Arg *dummy)$/;"	f	typeref:typename:void
selrequest	st/x.c	/^selrequest(XEvent *e)$/;"	f	typeref:typename:void
selscroll	st/st.c	/^selscroll(int orig, int n)$/;"	f	typeref:typename:void
selsnap	st/st.c	/^selsnap(int *x, int *y, int direction)$/;"	f	typeref:typename:void
selstart	st/st.c	/^selstart(int col, int row, int snap)$/;"	f	typeref:typename:void
sendbreak	st/st.c	/^sendbreak(const Arg *arg)$/;"	f	typeref:typename:void
set	st/x.c	/^	FcFontSet *set;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:FcFontSet *	file:
setsel	st/x.c	/^setsel(char *str, Time t)$/;"	f	typeref:typename:void
shell	st/config.def.h	/^static char *shell = "\/bin\/sh";$/;"	v	typeref:typename:char *
shell	st/config.h	/^static char *shell = "\/bin\/sh";$/;"	v	typeref:typename:char *
shortcuts	st/config.def.h	/^static Shortcut shortcuts[] = {$/;"	v	typeref:typename:Shortcut[]
shortcuts	st/config.h	/^static Shortcut shortcuts[] = {$/;"	v	typeref:typename:Shortcut[]
sigchld	st/st.c	/^sigchld(int a)$/;"	f	typeref:typename:void
sixd_to_16bit	st/x.c	/^sixd_to_16bit(int x)$/;"	f	typeref:typename:ushort
siz	st/st.c	/^	size_t siz;            \/* allocation size *\/$/;"	m	struct:__anonaa52d4130608	typeref:typename:size_t	file:
size	st/utils.h	/^static inline int size(DynamicArray const * s) { return s->init \/ s->elSize; }$/;"	f	typeref:typename:int
snap	st/st.c	/^	int snap;$/;"	m	struct:__anonaa52d4130208	typeref:typename:int	file:
specbuf	st/x.c	/^	GlyphFontSpec *specbuf; \/* font spec buffer used for rendering *\/$/;"	m	struct:__anon1c6f2a240508	typeref:typename:GlyphFontSpec *	file:
spot	st/x.c	/^		XPoint spot;$/;"	m	struct:__anon1c6f2a240508::__anon1c6f2a240608	typeref:typename:XPoint	file:
spotlist	st/x.c	/^		XVaNestedList spotlist;$/;"	m	struct:__anon1c6f2a240508::__anon1c6f2a240608	typeref:typename:XVaNestedList	file:
st	st/Makefile	/^st: $(OBJ)$/;"	t
st.o	st/Makefile	/^st.o: config.h st.h win.h normalMode.h normalMode.c utils.h$/;"	t
state	st/normalMode.c	/^} defaultNormalMode, state;$/;"	v	typeref:struct:NormalModeState
state	st/st.c	/^	char state;$/;"	m	struct:__anonaa52d4130108	typeref:typename:char	file:
str	st/st.c	/^	const struct { int idx; char *str; } osc_table[] = {$/;"	m	struct:strhandle::__anonaa52d4130708	typeref:typename:char *	file:
strdump	st/st.c	/^strdump(void)$/;"	f	typeref:typename:void
strescseq	st/st.c	/^static STREscape strescseq;$/;"	v	typeref:typename:STREscape	file:
strhandle	st/st.c	/^strhandle(void)$/;"	f	typeref:typename:void
strparse	st/st.c	/^strparse(void)$/;"	f	typeref:typename:void
strreset	st/st.c	/^strreset(void)$/;"	f	typeref:typename:void
stty	st/st.c	/^stty(char **args)$/;"	f	typeref:typename:void
stty_args	st/config.def.h	/^char *stty_args = "stty raw pass8 nl -echo -iexten -cstopb 38400";$/;"	v	typeref:typename:char *
stty_args	st/config.h	/^char *stty_args = "stty raw pass8 nl -echo -iexten -cstopb 38400";$/;"	v	typeref:typename:char *
style	st/config.def.h	/^Glyph style[] = {{' ',ATTR_ITALIC|ATTR_FAINT,15,16}, {' ',ATTR_ITALIC,232,11},$/;"	v	typeref:typename:Glyph[]
style	st/config.h	/^Glyph style[] = {{' ',ATTR_ITALIC|ATTR_FAINT,15,16}, {' ',ATTR_ITALIC,232,11},$/;"	v	typeref:typename:Glyph[]
styleCmd	st/normalMode.c	/^Glyph styleCmd;$/;"	v	typeref:typename:Glyph
styleSearch	st/config.def.h	/^Glyph styleSearch = {' ', ATTR_ITALIC | ATTR_BOLD_FAINT, 7, 16};$/;"	v	typeref:typename:Glyph
styleSearch	st/config.h	/^Glyph styleSearch = {' ', ATTR_ITALIC | ATTR_BOLD_FAINT, 7, 16};$/;"	v	typeref:typename:Glyph
success	st/normalMode.h	/^typedef enum {failed=0, success=1, exitMotion=2, exitOp=3, finish=4} ExitState;$/;"	e	enum:__anon596f7d9f0103
swap	st/st.c	/^	int swap;$/;"	m	struct:__anonaa52d4130208	typeref:typename:int	file:
t	st/x.c	/^	int l, t; \/* left and top offset *\/$/;"	m	struct:__anon1c6f2a240508	typeref:typename:int	file:
tabs	st/st.c	/^	int *tabs;$/;"	m	struct:__anonaa52d4130408	typeref:typename:int *	file:
tabspaces	st/config.def.h	/^unsigned int tabspaces = 8;$/;"	v	typeref:typename:unsigned int
tabspaces	st/config.h	/^unsigned int tabspaces = 8;$/;"	v	typeref:typename:unsigned int
tattrset	st/st.c	/^tattrset(int attr)$/;"	f	typeref:typename:int
tclearregion	st/st.c	/^tclearregion(int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
tclick1	st/x.c	/^	struct timespec tclick1;$/;"	m	struct:__anon1c6f2a240708	typeref:struct:timespec	file:
tclick2	st/x.c	/^	struct timespec tclick2;$/;"	m	struct:__anon1c6f2a240708	typeref:struct:timespec	file:
tcontrolcode	st/st.c	/^tcontrolcode(uchar ascii)$/;"	f	typeref:typename:void
tcursor	st/st.c	/^tcursor(int mode)$/;"	f	typeref:typename:void
tdectest	st/st.c	/^tdectest(char c)$/;"	f	typeref:typename:void
tdefcolor	st/st.c	/^tdefcolor(const int *attr, int *npar, int l)$/;"	f	typeref:typename:int32_t
tdeftran	st/st.c	/^tdeftran(char ascii)$/;"	f	typeref:typename:void
tdefutf8	st/st.c	/^tdefutf8(char ascii)$/;"	f	typeref:typename:void
tdeletechar	st/st.c	/^tdeletechar(int n)$/;"	f	typeref:typename:void
tdeleteline	st/st.c	/^tdeleteline(int n)$/;"	f	typeref:typename:void
tdump	st/st.c	/^tdump(void)$/;"	f	typeref:typename:void
tdumpline	st/st.c	/^tdumpline(int n)$/;"	f	typeref:typename:void
tdumpsel	st/st.c	/^tdumpsel(void)$/;"	f	typeref:typename:void
term	st/st.c	/^static Term term;$/;"	v	typeref:typename:Term	file:
term_mode	st/st.c	/^enum term_mode {$/;"	g	file:
termname	st/config.def.h	/^char *termname = "st-256color";$/;"	v	typeref:typename:char *
termname	st/config.h	/^char *termname = "st-256color";$/;"	v	typeref:typename:char *
tfulldirt	st/st.c	/^tfulldirt(void)$/;"	f	typeref:typename:void
th	st/x.c	/^	int tw, th; \/* tty width and height *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
tinsertblank	st/st.c	/^tinsertblank(int n)$/;"	f	typeref:typename:void
tinsertblankline	st/st.c	/^tinsertblankline(int n)$/;"	f	typeref:typename:void
tlinelen	st/st.c	/^tlinelen(int y)$/;"	f	typeref:typename:int
tmoveato	st/st.c	/^tmoveato(int x, int y)$/;"	f	typeref:typename:void
tmoveto	st/st.c	/^tmoveto(int x, int y)$/;"	f	typeref:typename:void
tnew	st/st.c	/^tnew(int col, int row)$/;"	f	typeref:typename:void
tnewline	st/st.c	/^tnewline(int first_col)$/;"	f	typeref:typename:void
toggleprinter	st/st.c	/^toggleprinter(const Arg *arg)$/;"	f	typeref:typename:void
top	st/st.c	/^	int top;      \/* top    scroll limit *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:int	file:
tprinter	st/st.c	/^tprinter(char *s, size_t len)$/;"	f	typeref:typename:void
tputc	st/st.c	/^tputc(Rune u)$/;"	f	typeref:typename:void
tputtab	st/st.c	/^tputtab(int n)$/;"	f	typeref:typename:void
trantbl	st/st.c	/^	char trantbl[4]; \/* charset table translation *\/$/;"	m	struct:__anonaa52d4130408	typeref:typename:char[4]	file:
treset	st/st.c	/^treset(void)$/;"	f	typeref:typename:void
tresize	st/st.c	/^tresize(int col, int row)$/;"	f	typeref:typename:void
tripleclicktimeout	st/config.def.h	/^static unsigned int tripleclicktimeout = 600;$/;"	v	typeref:typename:unsigned int
tripleclicktimeout	st/config.h	/^static unsigned int tripleclicktimeout = 600;$/;"	v	typeref:typename:unsigned int
tscrolldown	st/st.c	/^tscrolldown(int orig, int n)$/;"	f	typeref:typename:void
tscrollup	st/st.c	/^tscrollup(int orig, int n)$/;"	f	typeref:typename:void
tsetattr	st/st.c	/^tsetattr(const int *attr, int l)$/;"	f	typeref:typename:void
tsetchar	st/st.c	/^tsetchar(Rune u, const Glyph *attr, int x, int y)$/;"	f	typeref:typename:void
tsetdirt	st/st.c	/^tsetdirt(int top, int bot)$/;"	f	typeref:typename:void
tsetdirtattr	st/st.c	/^tsetdirtattr(int attr)$/;"	f	typeref:typename:void
tsetmode	st/st.c	/^tsetmode(int priv, int set, const int *args, int narg)$/;"	f	typeref:typename:void
tsetscroll	st/st.c	/^tsetscroll(int t, int b)$/;"	f	typeref:typename:void
tstrsequence	st/st.c	/^tstrsequence(uchar c)$/;"	f	typeref:typename:void
tswapscreen	st/st.c	/^tswapscreen(void)$/;"	f	typeref:typename:void
ttyhangup	st/st.c	/^ttyhangup()$/;"	f	typeref:typename:void
ttynew	st/st.c	/^ttynew(const char *line, char *cmd, const char *out, char **args)$/;"	f	typeref:typename:int
ttyread	st/st.c	/^ttyread(void)$/;"	f	typeref:typename:size_t
ttyresize	st/st.c	/^ttyresize(int tw, int th)$/;"	f	typeref:typename:void
ttysend	st/x.c	/^ttysend(const Arg *arg)$/;"	f	typeref:typename:void
ttywrite	st/st.c	/^ttywrite(const char *s, size_t n, int may_echo)$/;"	f	typeref:typename:void
ttywriteraw	st/st.c	/^ttywriteraw(const char *s, size_t n)$/;"	f	typeref:typename:void
tw	st/x.c	/^	int tw, th; \/* tty width and height *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
twrite	st/st.c	/^twrite(const char *buf, int buflen, int show_ctrl)$/;"	f	typeref:typename:int
type	st/st.c	/^	char type;             \/* ESC type ... *\/$/;"	m	struct:__anonaa52d4130608	typeref:typename:char	file:
type	st/st.c	/^	int type;$/;"	m	struct:__anonaa52d4130208	typeref:typename:int	file:
u	st/st.h	/^	Rune u;           \/* character code *\/$/;"	m	struct:__anonaa52d4180108	typeref:typename:Rune
uchar	st/st.h	/^typedef unsigned char uchar;$/;"	t	typeref:typename:unsigned char
ui	st/st.h	/^	uint ui;$/;"	m	union:__anonaa52d418020a	typeref:typename:uint
uint	st/st.h	/^typedef unsigned int uint;$/;"	t	typeref:typename:unsigned int
ulong	st/st.h	/^typedef unsigned long ulong;$/;"	t	typeref:typename:unsigned long
unicodep	st/x.c	/^	Rune unicodep;$/;"	m	struct:__anon1c6f2a240b08	typeref:typename:Rune	file:
uninstall	st/Makefile	/^uninstall:$/;"	t
unmap	st/x.c	/^unmap(XEvent *ev)$/;"	f	typeref:typename:void
usage	st/x.c	/^usage(void)$/;"	f	typeref:typename:void
usedfont	st/x.c	/^static char *usedfont = NULL;$/;"	v	typeref:typename:char *	file:
usedfontsize	st/x.c	/^static double usedfontsize = 0;$/;"	v	typeref:typename:double	file:
ushort	st/st.h	/^typedef unsigned short ushort;$/;"	t	typeref:typename:unsigned short
utf8decode	st/st.c	/^utf8decode(const char *c, Rune *u, size_t clen)$/;"	f	typeref:typename:size_t
utf8decodebyte	st/st.c	/^utf8decodebyte(char c, size_t *i)$/;"	f	typeref:typename:Rune
utf8encode	st/st.c	/^utf8encode(Rune u, char *c)$/;"	f	typeref:typename:size_t
utf8encodebyte	st/st.c	/^utf8encodebyte(Rune u, size_t i)$/;"	f	typeref:typename:char
utf8validate	st/st.c	/^utf8validate(Rune *u, size_t i)$/;"	f	typeref:typename:size_t
utfbyte	st/st.c	/^static const uchar utfbyte[UTF_SIZ + 1] = {0x80,    0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:const uchar[]	file:
utfmask	st/st.c	/^static const uchar utfmask[UTF_SIZ + 1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:const uchar[]	file:
utfmax	st/st.c	/^static const Rune utfmax[UTF_SIZ + 1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:const Rune[]	file:
utfmin	st/st.c	/^static const Rune utfmin[UTF_SIZ + 1] = {       0,    0,  0x80,  0x800,  0x10000};$/;"	v	typeref:typename:const Rune[]	file:
utmp	st/config.def.h	/^char *utmp = NULL;$/;"	v	typeref:typename:char *
utmp	st/config.h	/^char *utmp = NULL;$/;"	v	typeref:typename:char *
v	st/st.h	/^	const void *v;$/;"	m	union:__anonaa52d418020a	typeref:typename:const void *
view	st/utils.h	/^static inline char *view(DynamicArray * s, uint32_t i) { return s->content + i*s->elSize; }$/;"	f	typeref:typename:char *
vis	st/x.c	/^	Visual *vis;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Visual *	file:
visibility	st/x.c	/^visibility(XEvent *ev)$/;"	f	typeref:typename:void
visual	st/normalMode.c	/^typedef enum {visual='v', visualLine='V', yank = 'y'} Op;$/;"	e	enum:__anon596f7d9a0203	file:
visualLine	st/normalMode.c	/^typedef enum {visual='v', visualLine='V', yank = 'y'} Op;$/;"	e	enum:__anon596f7d9a0203	file:
vtiden	st/config.def.h	/^char *vtiden = "\\033[?6c";$/;"	v	typeref:typename:char *
vtiden	st/config.h	/^char *vtiden = "\\033[?6c";$/;"	v	typeref:typename:char *
w	st/x.c	/^	int w, h; \/* window width and height *\/$/;"	m	struct:__anon1c6f2a240408	typeref:typename:int	file:
wDelL	st/config.def.h	/^char const wDelS[] = "!\\"#$%&'()*+,-.\/:;<=>?@[\\\\]^`{|}~", wDelL[] = " \\t";$/;"	v	typeref:typename:char const[]
wDelL	st/config.h	/^char const wDelS[] = "!\\"#$%&'()*+,-.\/:;<=>?@[\\\\]^`{|}~", wDelL[] = " \\t";$/;"	v	typeref:typename:char const[]
wDelS	st/config.def.h	/^char const wDelS[] = "!\\"#$%&'()*+,-.\/:;<=>?@[\\\\]^`{|}~", wDelL[] = " \\t";$/;"	v	typeref:typename:char const[]
wDelS	st/config.h	/^char const wDelS[] = "!\\"#$%&'()*+,-.\/:;<=>?@[\\\\]^`{|}~", wDelL[] = " \\t";$/;"	v	typeref:typename:char const[]
width	st/x.c	/^	int width;$/;"	m	struct:__anon1c6f2a240808	typeref:typename:int	file:
win	st/x.c	/^	Window win;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Window	file:
win	st/x.c	/^static TermWindow win;$/;"	v	typeref:typename:TermWindow	file:
win_mode	st/win.h	/^enum win_mode {$/;"	g
wmdeletewin	st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmiconname, netwmpid;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Atom	file:
worddelimiters	st/config.def.h	/^wchar_t *worddelimiters = L" ";$/;"	v	typeref:typename:wchar_t *
worddelimiters	st/config.h	/^wchar_t *worddelimiters = L" ";$/;"	v	typeref:typename:wchar_t *
x	st/st.c	/^		int x, y;$/;"	m	struct:__anonaa52d4130208::__anonaa52d4130308	typeref:typename:int	file:
x	st/st.c	/^	int x;$/;"	m	struct:__anonaa52d4130108	typeref:typename:int	file:
x.o	st/Makefile	/^x.o: arg.h config.h st.h win.h$/;"	t
xbell	st/x.c	/^xbell(void)$/;"	f	typeref:typename:void
xclear	st/x.c	/^xclear(int x1, int y1, int x2, int y2)$/;"	f	typeref:typename:void
xclipcopy	st/x.c	/^xclipcopy(void)$/;"	f	typeref:typename:void
xdrawcursor	st/x.c	/^xdrawcursor(int cx, int cy, Glyph g, int ox, int oy, Glyph og)$/;"	f	typeref:typename:void
xdrawglyph	st/x.c	/^xdrawglyph(Glyph g, int x, int y)$/;"	f	typeref:typename:void
xdrawglyphfontspecs	st/x.c	/^xdrawglyphfontspecs(const XftGlyphFontSpec *specs, Glyph base, int len, int x, int y)$/;"	f	typeref:typename:void
xdrawline	st/x.c	/^xdrawline(Line line, int x1, int y1, int x2)$/;"	f	typeref:typename:void
xembed	st/x.c	/^	Atom xembed, wmdeletewin, netwmname, netwmiconname, netwmpid;$/;"	m	struct:__anon1c6f2a240508	typeref:typename:Atom	file:
xfinishdraw	st/x.c	/^xfinishdraw(void)$/;"	f	typeref:typename:void
xgeommasktogravity	st/x.c	/^xgeommasktogravity(int mask)$/;"	f	typeref:typename:int
xgetcolor	st/x.c	/^xgetcolor(int x, unsigned char *r, unsigned char *g, unsigned char *b)$/;"	f	typeref:typename:int
xhints	st/x.c	/^xhints(void)$/;"	f	typeref:typename:void
xic	st/x.c	/^		XIC xic;$/;"	m	struct:__anon1c6f2a240508::__anon1c6f2a240608	typeref:typename:XIC	file:
xicdestroy	st/x.c	/^xicdestroy(XIC xim, XPointer client, XPointer call)$/;"	f	typeref:typename:int
xim	st/x.c	/^		XIM xim;$/;"	m	struct:__anon1c6f2a240508::__anon1c6f2a240608	typeref:typename:XIM	file:
ximdestroy	st/x.c	/^ximdestroy(XIM xim, XPointer client, XPointer call)$/;"	f	typeref:typename:void
ximinstantiate	st/x.c	/^ximinstantiate(Display *dpy, XPointer client, XPointer call)$/;"	f	typeref:typename:void
ximopen	st/x.c	/^ximopen(Display *dpy)$/;"	f	typeref:typename:int
xinit	st/x.c	/^xinit(int cols, int rows)$/;"	f	typeref:typename:void
xloadcolor	st/x.c	/^xloadcolor(int i, const char *name, Color *ncolor)$/;"	f	typeref:typename:int
xloadcols	st/x.c	/^xloadcols(void)$/;"	f	typeref:typename:void
xloadfont	st/x.c	/^xloadfont(Font *f, FcPattern *pattern)$/;"	f	typeref:typename:int
xloadfonts	st/x.c	/^xloadfonts(const char *fontstr, double fontsize)$/;"	f	typeref:typename:void
xloadsparefont	st/x.c	/^xloadsparefont(FcPattern *pattern, int flags)$/;"	f	typeref:typename:int
xloadsparefonts	st/x.c	/^xloadsparefonts(void)$/;"	f	typeref:typename:void
xmakeglyphfontspecs	st/x.c	/^xmakeglyphfontspecs(XftGlyphFontSpec *specs, const Glyph *glyphs, int len, int x, int y)$/;"	f	typeref:typename:int
xmalloc	st/st.c	/^xmalloc(size_t len)$/;"	f	typeref:typename:void *
xrealloc	st/st.c	/^xrealloc(void *p, size_t len)$/;"	f	typeref:typename:void *
xresize	st/x.c	/^xresize(int col, int row)$/;"	f	typeref:typename:void
xsel	st/x.c	/^static XSelection xsel;$/;"	v	typeref:typename:XSelection	file:
xsetcolorname	st/x.c	/^xsetcolorname(int x, const char *name)$/;"	f	typeref:typename:int
xsetcursor	st/x.c	/^xsetcursor(int cursor)$/;"	f	typeref:typename:int
xsetenv	st/x.c	/^xsetenv(void)$/;"	f	typeref:typename:void
xseticontitle	st/x.c	/^xseticontitle(char *p)$/;"	f	typeref:typename:void
xsetmode	st/x.c	/^xsetmode(int set, unsigned int flags)$/;"	f	typeref:typename:void
xsetpointermotion	st/x.c	/^xsetpointermotion(int set)$/;"	f	typeref:typename:void
xsetsel	st/x.c	/^xsetsel(char *str)$/;"	f	typeref:typename:void
xsettitle	st/x.c	/^xsettitle(char *p)$/;"	f	typeref:typename:void
xseturgency	st/x.c	/^xseturgency(int add)$/;"	f	typeref:typename:void
xstartdraw	st/x.c	/^xstartdraw(void)$/;"	f	typeref:typename:int
xstrdup	st/st.c	/^xstrdup(const char *s)$/;"	f	typeref:typename:char *
xtarget	st/x.c	/^	Atom xtarget;$/;"	m	struct:__anon1c6f2a240708	typeref:typename:Atom	file:
xunloadfont	st/x.c	/^xunloadfont(Font *f)$/;"	f	typeref:typename:void
xunloadfonts	st/x.c	/^xunloadfonts(void)$/;"	f	typeref:typename:void
xw	st/x.c	/^static XWindow xw;$/;"	v	typeref:typename:XWindow	file:
xwrite	st/st.c	/^xwrite(int fd, const char *s, size_t len)$/;"	f	typeref:typename:ssize_t
xximspot	st/x.c	/^xximspot(int x, int y)$/;"	f	typeref:typename:void
y	st/st.c	/^		int x, y;$/;"	m	struct:__anonaa52d4130208::__anonaa52d4130308	typeref:typename:int	file:
y	st/st.c	/^	int y;$/;"	m	struct:__anonaa52d4130108	typeref:typename:int	file:
yank	st/normalMode.c	/^typedef enum {visual='v', visualLine='V', yank = 'y'} Op;$/;"	e	enum:__anon596f7d9a0203	file:
zoom	st/x.c	/^zoom(const Arg *arg)$/;"	f	typeref:typename:void
zoomabs	st/x.c	/^zoomabs(const Arg *arg)$/;"	f	typeref:typename:void
zoomreset	st/x.c	/^zoomreset(const Arg *arg)$/;"	f	typeref:typename:void
